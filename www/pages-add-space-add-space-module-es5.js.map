{"version":3,"sources":["webpack:///src/app/pages/add-space/add-space.page.html","webpack:///src/app/pages/add-space/add-space-routing.module.ts","webpack:///src/app/pages/add-space/add-space.module.ts","webpack:///src/app/pages/add-space/add-space.page.scss","webpack:///src/app/pages/add-space/add-space.page.ts"],"names":["routes","path","component","AddSpacePageRoutingModule","imports","forChild","exports","AddSpacePageModule","declarations","AddSpacePage","popover","formBuilder","ownerservice","account","loadingCtrl","router","alertCtrl","amenityList","amenitie","amenitiesData","id","name","ret_array","viewSpace","spaces","spacesT","spacesTT","addCoSpaceForm","group","categories","required","category_number","address","city","province","description","maxLength","minLength","price","pattern","array","nameAnim","requiredTrue","errorMessages","type","message","firestore","collection","doc","getUserSession","where","get","then","forEach","dat","profileUid","isChecked","cartoons","controls","push","index","findIndex","x","value","removeAt","fieldName","invalid","dirty","touched","fileInput","imageError","target","files","max_size","allowed_types","max_height","max_width","size","includes","reader","FileReader","onload","e","image","Image","src","result","rs","img_height","currentTarget","img_width","console","log","imgBase64Path","cardImageBase64","isImageSaved","readAsDataURL","addcoworkingSpace","snap","data","setWorkSpaceUID","workspace_uid","unique","returnUniq","i","indexOf","workingSpaces","create","showBackdrop","popoverElement","present","selector","template"],"mappings":"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","file":"pages-add-space-add-space-module-es5.js","sourcesContent":["export default \"<ion-content>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <!-- <div  *ngIf=\\\"viewSpace==0\\\"> -->\\r\\n    <div *ngIf=\\\"viewSpace==0\\\" style=\\\"border: 1px solid white;height: 100%;  background-image: url(../assets/background2.png)\\\">\\r\\n        <div style=\\\"height: 100%;width: 100%; border: 1px solid white;background-color: white;bottom: 0%;left: 0;position: absolute;border-top-right-radius:20%;\\\">\\r\\n\\r\\n            <div>\\r\\n                <ion-grid style=\\\"padding-top:10%;padding-bottom:0%;\\\">\\r\\n                    <ion-row>\\r\\n                        <h1 style=\\\"font-family: Arial, Helvetica, sans-serif;color:#1E3D58 ;\\\">ADD SPACE</h1>\\r\\n                    </ion-row>\\r\\n                </ion-grid>\\r\\n            </div>\\r\\n            <div  style=\\\"border:1px solid white;bottom:0%;;position:relative;height: 78%;overflow: scroll;\\\">\\r\\n                <form style=\\\"height: 100%;\\\" [formGroup]=\\\"addCoSpaceForm\\\">\\r\\n                    <ion-grid style=\\\"width: 100%;\\\">\\r\\n                        <ion-row style=\\\"font-family: Arial, Helvetica, sans-serif;font-size: .9em;color:#057DCD;font-weight: bold;\\\">\\r\\n                            <ion-col>\\r\\n                                <ion-label>Space Category</ion-label>\\r\\n                                <ion-select formControlName=\\\"categories\\\">\\r\\n                                    <ion-select-option value=\\\"private office\\\">Private Office</ion-select-option>\\r\\n                                    <ion-select-option value=\\\"boardroom\\\">BoardRoom</ion-select-option>\\r\\n                                    <ion-select-option value=\\\"Pair\\\">Pair Office</ion-select-option>\\r\\n                                    <ion-select-option value=\\\"Sharing\\\">Shared Office</ion-select-option>\\r\\n                                    <ion-select-option value=\\\"OpenSpace\\\">Open Plan</ion-select-option>\\r\\n                                </ion-select>\\r\\n                                <div style=\\\"color:red;\\\" *ngIf=\\\"isValidInput('categories')\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"addCoSpaceForm.controls['categories'].errors.required\\\">\\r\\n                                        categories is required\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"addCoSpaceForm.controls['categories'].errors.pattern\\\">\\r\\n                                        categories email format\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </ion-col>\\r\\n                            <ion-col>\\r\\n                                <ion-label>Category Number</ion-label>\\r\\n                                <ion-select formControlName=\\\"category_number\\\">\\r\\n                                    <ion-select-option value=\\\"1\\\">1</ion-select-option>\\r\\n                                    <ion-select-option value=\\\"2\\\">2</ion-select-option>\\r\\n                                    <ion-select-option value=\\\"3\\\">3</ion-select-option>\\r\\n                                    <ion-select-option value=\\\"4\\\">4</ion-select-option>\\r\\n                                </ion-select>\\r\\n                                <div style=\\\"color:red;\\\" *ngIf=\\\"isValidInput('category_number')\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"addCoSpaceForm.controls['category_number'].errors.required\\\">\\r\\n                                        category_number is required\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"addCoSpaceForm.controls['category_number'].errors.pattern\\\">\\r\\n                                        category_number format\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </ion-col>\\r\\n                        </ion-row>\\r\\n                        <ion-row>\\r\\n                            <ion-col size=\\\"6\\\">\\r\\n                                <div style=\\\"padding-bottom: 5%;width: 100%;\\\">\\r\\n                                    <ion-input style=\\\"width: 100%;\\\" type=\\\"decimal\\\" formControlName=\\\"price\\\" placeholder=\\\"Price\\\" minlength=\\\"5\\\" maxlength=\\\"6\\\" required placeholder=\\\"Price\\\" style=\\\"background-color: #E8EEF1;border-radius: 20px;\\\"></ion-input>\\r\\n                                </div>\\r\\n                                <div style=\\\"color:red;\\\" *ngIf=\\\"isValidInput('price')\\\" class=\\\"alert alert-danger\\\">\\r\\n                                    <div *ngIf=\\\"addCoSpaceForm.controls['price'].errors.required\\\">\\r\\n                                        price is required\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"addCoSpaceForm.controls['price'].errors.pattern\\\">\\r\\n                                        price format\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"addCoSpaceForm.controls['price'].hasError('maxlength')\\\">\\r\\n                                        minLength is 5\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"addCoSpaceForm.controls['price'].hasError('minlength')\\\">\\r\\n                                        maxLength is 3\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </ion-col>\\r\\n                        </ion-row>\\r\\n                        <ion-row>\\r\\n                            <ion-textarea placeholder=\\\"Description\\\" formControlName=\\\"description\\\" style=\\\"background-color: #E8EEF1;border-radius: 5px\\\">\\r\\n                            </ion-textarea>\\r\\n                            <div style=\\\"color:red;\\\" *ngIf=\\\"!description?.valid && (description?.dirty || description?.touched)\\\">\\r\\n                                Invalid description\\r\\n                                <div *ngIf=\\\"description.errors.required\\\">\\r\\n                                    description is required\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"description.errors.maxlength\\\">\\r\\n                                    maxlength is 150\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"description.errors.minlength\\\">\\r\\n                                    minlength is 5\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                        </ion-row>\\r\\n                        <ion-row>\\r\\n                            <div style=\\\"font-family: Arial, Helvetica, sans-serif;font-size: 1.1em;color:#1E3D58;font-weight: bold;padding-top: 5%;padding-bottom: 5%;\\\">\\r\\n                                <b>Enter your adress below</b>\\r\\n                            </div>\\r\\n\\r\\n                        </ion-row>\\r\\n                        <ion-row>\\r\\n                            <div style=\\\"padding-bottom: 5%;width: 100%;\\\">\\r\\n                                <ion-textarea placeholder=\\\"Address\\\" formControlName=\\\"address\\\" style=\\\"background-color: #E8EEF1;border-radius: 5px\\\"></ion-textarea>\\r\\n\\r\\n                            </div>\\r\\n                            <div style=\\\"color:red;\\\" *ngIf=\\\"!address?.valid && (address?.dirty || address?.touched)\\\">\\r\\n                                Invalid description\\r\\n                                <div *ngIf=\\\"address.errors.required\\\">\\r\\n                                    address is required\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </ion-row>\\r\\n                        <ion-row style=\\\"font-family: Arial, Helvetica, sans-serif;font-size: .9em;color:#057DCD;font-weight: bold;\\\">\\r\\n                            <ion-label>Province</ion-label>\\r\\n                            <ion-select formControlName=\\\"province\\\">\\r\\n                                <ion-select-option value=\\\"gauteng\\\">Gauteng</ion-select-option>\\r\\n                                <ion-select-option value=\\\"limpopo\\\">Limpopo</ion-select-option>\\r\\n                                <ion-select-option value=\\\"kzn\\\">KZN</ion-select-option>\\r\\n                                <ion-select-option value=\\\"mpumalanga\\\">Mpumalanga</ion-select-option>\\r\\n                                <ion-select-option value=\\\"northwest\\\">North West</ion-select-option>\\r\\n                                <ion-select-option value=\\\"easterncape\\\">Eastern Cape</ion-select-option>\\r\\n                            </ion-select>\\r\\n                            <div style=\\\"color:red;\\\" *ngIf=\\\"!city?.valid && (city?.dirty || city?.touched)\\\">\\r\\n                                Invalid Province\\r\\n                                <div *ngIf=\\\"city.errors.required\\\">\\r\\n                                    address is Province\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </ion-row>\\r\\n\\r\\n                        <ion-row>\\r\\n                            <div style=\\\"padding-bottom: 5%;width: 100%;\\\">\\r\\n                                <ion-input style=\\\"width: 100%;\\\" type=\\\"text\\\" formControlName=\\\"city\\\" placeholder=\\\"city\\\" style=\\\"background-color: #E8EEF1;border-radius: 20px;\\\"></ion-input>\\r\\n                            </div>\\r\\n                            <div style=\\\"color:red;\\\" *ngIf=\\\"!city?.valid && (city?.dirty || city?.touched)\\\">\\r\\n                                Invalid city\\r\\n                                <div *ngIf=\\\"city.errors.required\\\">\\r\\n                                    address is required\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </ion-row>\\r\\n\\r\\n\\r\\n                        <ion-row>\\r\\n                            <ion-input type=\\\"file\\\" required name=\\\"img\\\" accept=\\\"image/*\\\" id=\\\"upload\\\" (change)=\\\"fileChangeEvent($event)\\\"></ion-input>\\r\\n                            <div>\\r\\n                                <div style=\\\"color:red;\\\" *ngIf=\\\" this.imageError!==''\\\">{{this.imageError}}</div>\\r\\n                            </div>\\r\\n                        </ion-row>\\r\\n\\r\\n                        <ion-row>\\r\\n                            <div style=\\\"font-family: Arial, Helvetica, sans-serif;font-size: 1em;color:#057DCD;font-weight: bold;padding-top: 5%;padding-bottom: 5%;\\\">\\r\\n                                <b>Add Amenities</b>\\r\\n                            </div>\\r\\n                        </ion-row>\\r\\n\\r\\n\\r\\n                        <ion-row>\\r\\n                            <div style=\\\"height: 100px;width: 100%;border: 1px solid whitesmoke;overflow: scroll;background-color: whitesmoke;border-radius: 5px;\\\">\\r\\n                                <ion-grid style=\\\"width: 100%;\\\">\\r\\n\\r\\n                                    <ion-row>\\r\\n\\r\\n                                        <ion-col *ngFor=\\\"let amenities of amenitiesData\\\" size=\\\"3\\\">\\r\\n                                            <div style=\\\"font-size: 1em;\\\">\\r\\n                                                <input type=\\\"checkbox\\\" formControlName=\\\"nameAnim\\\" (change)=\\\"onChange(amenities.name, $event.target.checked)\\\" />\\r\\n                                            </div>\\r\\n                                            <div style=\\\"font-size: .7em;\\\"> {{ amenities.name }}</div>\\r\\n                                        </ion-col>\\r\\n                                        <div style=\\\"color:red;\\\" *ngIf=\\\"isValidInput('nameAnim')\\\" class=\\\"alert alert-danger\\\">\\r\\n                                            <div *ngIf=\\\"addCoSpaceForm.controls['nameAnim'].errors.required\\\">\\r\\n                                                Atleast one Amenity should be selected\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n\\r\\n                                    </ion-row>\\r\\n                                </ion-grid>\\r\\n                            </div>\\r\\n                        </ion-row>\\r\\n\\r\\n                        <ion-row>\\r\\n\\r\\n                            <ion-col style=\\\"width:100%; \\\">\\r\\n                                <div style=\\\"width:100%;padding-top:5%;padding-bottom:5%;right: -13px;position: absolute; \\\">\\r\\n                                    <ion-button (click)=\\\"submit()\\\" style=\\\"width: 100%;--border-radius: 20px;--background: #1b8022;height: 50px;color:#bbf0bf\\\">ADD SPACE</ion-button>\\r\\n                                </div>\\r\\n                            </ion-col>\\r\\n                            <ion-col>\\r\\n                                <div style=\\\"width:100%;padding-top:5%;padding-bottom:5%;position: absolute;left: -15px; \\\">\\r\\n                                    <ion-button routerLink=\\\"/your-spaces\\\" (click)=\\\"view()\\\" style=\\\"width: 100%;--border-radius: 20px;--background: #be0023;height: 50px;color:#eec0c8\\\">VIEW SPACE</ion-button>\\r\\n                                </div>\\r\\n                            </ion-col>\\r\\n                        </ion-row>\\r\\n\\r\\n\\r\\n                    </ion-grid>\\r\\n\\r\\n                </form>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- </div> -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <!-- <div *ngIf=\\\"viewSpace==1\\\"> --> \\r\\n\\r\\n\\r\\n\\r\\n    <!-- <div *ngIf=\\\"viewSpace==1\\\" style=\\\"border: 1px solid white;height: 100%;  background-image: url(../assets/background2.png)\\\">\\r\\n            <div style=\\\"height: 100%;width: 100%; border: 1px solid white;background-color: white;bottom: 0%;left: 0;position: absolute;border-top-right-radius:20%;border-bottom-right-radius:10%\\\" >\\r\\n             \\r\\n          <div style=\\\"padding-bottom:10%;\\\">\\r\\n            <ion-grid style=\\\"padding-top:10%;padding-bottom:0%;\\\">\\r\\n              <ion-row><h1 style=\\\"font-family: Arial, Helvetica, sans-serif;color:#1E3D58 ;\\\">Categories</h1></ion-row>\\r\\n            </ion-grid>\\r\\n          </div>\\r\\n              <div style=\\\"border:1px solid white;bottom:0%;;position:relative;;\\\">\\r\\n                <ion-grid  style=\\\"width: 100%;\\\">\\r\\n                  <ion-row   *ngFor=\\\"let x of ret_array\\\">\\r\\n                     <div  *ngIf=\\\"x=='Sharing'\\\" style=\\\"margin-bottom: 5%; text-align: center; height: 50px;width: 100%; background-color:#F8EFFB;border-radius: 15px;\\\">\\r\\n                        <a  style=\\\"color:#603F8B;text-decoration: none;\\\" [routerLink]=\\\"['/update-space/',x]\\\"><h5>{{x}}</h5></a> \\r\\n                     </div>\\r\\n                     <div *ngIf=\\\"x=='private office'\\\"  style=\\\"margin-bottom: 5%; text-align: center; height: 50px;width: 100%; background-color: #EFF8FB;border-radius: 15px;color:#5882FA\\\">\\r\\n                        <a  style=\\\"color:#5882FA;text-decoration: none\\\" [routerLink]=\\\"['/update-space/',x]\\\"><h5>{{x}}</h5></a>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"x=='Pair'\\\" style=\\\"margin-bottom: 5%; text-align: center; height: 50px;width: 100%; background-color: #FBF8EF;border-radius: 15px;color:#F7D358\\\">\\r\\n                    <a style=\\\"color:#F7D358;text-decoration: none\\\" [routerLink]=\\\"['/update-space/',x]\\\"><h5  >{{x}}</h5></a>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"x=='BoardRoom'\\\" style=\\\"margin-bottom: 5%; text-align: center; height: 50px;width: 100%;background-color: #FBEFF2;border-radius: 15px;color:#FA5882\\\">\\r\\n                    <a style=\\\"color:#FA5882;text-decoration: none\\\" [routerLink]=\\\"['/update-space/',x]\\\"><h5>{{x}}</h5></a>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"x=='OpenSpace'\\\" style=\\\"margin-bottom: 5%; text-align: center; height: 50px;width: 100%;background-color: #FBEFF2;border-radius: 15px;color:#a78991\\\">\\r\\n                <a style=\\\"color:#a78991;text-decoration: none\\\" [routerLink]=\\\"['/update-space/',x]\\\"><h5>{{x}}</h5></a>\\r\\n            </div>\\r\\n                  </ion-row>\\r\\n                </ion-grid>\\r\\n              </div>\\r\\n            </div>\\r\\n           </div>  -->\\r\\n\\r\\n    <!-- </div>  -->\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <!-- <div >\\r\\n  <ion-buttons slot=\\\"start\\\">\\r\\n    <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\r\\n  </ion-buttons>\\r\\n</div> -->\\r\\n    <!-- <div class=\\\"holder\\\">\\r\\n        <ion-icon style=\\\"position: absolute;left:3%;font-size: 30px;margin-top: 5px; top: 15%;color: #9010F5;\\\" name=\\\"images-outline\\\">\\r\\n            <ion-input type=\\\"file\\\" required name=\\\"img\\\" accept=\\\"image/*\\\" id=\\\"upload\\\" (change)=\\\"fileChangeEvent($event)\\\"></ion-input>\\r\\n        </ion-icon>\\r\\n\\r\\n        <div class=\\\"top\\\">\\r\\n            <ion-buttons slot=\\\"start\\\">\\r\\n                <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\r\\n            </ion-buttons>\\r\\n\\r\\n            <p style=\\\"font-size: 24px; font-weight: bold; color:white; margin-top: -20px;\\\">Add your space</p>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"viewSpace==1\\\">\\r\\n            <ion-grid style=\\\"margin: 0%;\\\">\\r\\n                <ion-row *ngFor=\\\"let x of ret_array\\\">\\r\\n\\r\\n          \\r\\n                    <ion-icon class=\\\"viewspaces\\\" name=\\\"caret-forward-outline\\\" [routerLink]=\\\"['/update-space/',x]\\\"></ion-icon>{{x}}\\r\\n\\r\\n\\r\\n\\r\\n                </ion-row>\\r\\n            </ion-grid>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"bottom\\\" *ngIf=\\\"viewSpace==0\\\">\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n            <div style=\\\"position: absolute;width: 6.5%;height: 4%; border-radius: 50%; background-color:white;top: 15%;left: 1%; display: flex;justify-content: center;align-items: center;\\\">\\r\\n                <ion-icon style=\\\"font-size: 20px;color: white;background-color: #16D6E3; border-radius: 50%;\\\" name=\\\"add-circle-outline\\\"></ion-icon>\\r\\n            </div>\\r\\n\\r\\n            <form style=\\\"height: 100%;\\\" [formGroup]=\\\"addCoSpaceForm\\\">\\r\\n\\r\\n                <ion-item>\\r\\n                    <ion-input type=\\\"file\\\" required name=\\\"img\\\" accept=\\\"image/*\\\" id=\\\"upload\\\" (change)=\\\"fileChangeEvent($event)\\\"></ion-input>\\r\\n                    <div>\\r\\n                        <div style=\\\"color:red;\\\" *ngIf=\\\" this.imageError!==''\\\">{{this.imageError}}</div>\\r\\n                    </div>\\r\\n                </ion-item>\\r\\n                <ion-item>\\r\\n                    <ion-label>Space category</ion-label>\\r\\n                    <ion-select formControlName=\\\"categories\\\">\\r\\n                        <ion-select-option value=\\\"private office\\\">Private Office</ion-select-option>\\r\\n                        <ion-select-option value=\\\"boardroom\\\">BoardRoom</ion-select-option>\\r\\n                        <ion-select-option value=\\\"Pair\\\">Pair Office</ion-select-option>\\r\\n                        <ion-select-option value=\\\"Sharing\\\">Shared Office</ion-select-option>\\r\\n                        <ion-select-option value=\\\"OpenSpace\\\">Open Plan</ion-select-option>\\r\\n\\r\\n                    </ion-select>\\r\\n                    <div style=\\\"color:red;\\\" *ngIf=\\\"isValidInput('categories')\\\" class=\\\"alert alert-danger\\\">\\r\\n                        <div *ngIf=\\\"addCoSpaceForm.controls['categories'].errors.required\\\">\\r\\n                            categories is required\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"addCoSpaceForm.controls['categories'].errors.pattern\\\">\\r\\n                            categories email format\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ion-item>\\r\\n                <ion-item>\\r\\n                    <ion-label>Category Number</ion-label>\\r\\n                    <ion-select formControlName=\\\"category_number\\\">\\r\\n\\r\\n                        <ion-select-option value=\\\"1\\\">1</ion-select-option>\\r\\n                        <ion-select-option value=\\\"2\\\">2</ion-select-option>\\r\\n                        <ion-select-option value=\\\"3\\\">3</ion-select-option>\\r\\n                        <ion-select-option value=\\\"4\\\">4</ion-select-option>\\r\\n\\r\\n                    </ion-select>\\r\\n                    <div style=\\\"color:red;\\\" *ngIf=\\\"isValidInput('category_number')\\\" class=\\\"alert alert-danger\\\">\\r\\n                        <div *ngIf=\\\"addCoSpaceForm.controls['category_number'].errors.required\\\">\\r\\n                            category_number is required\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"addCoSpaceForm.controls['category_number'].errors.pattern\\\">\\r\\n                            category_number format\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ion-item>\\r\\n                <ion-item>\\r\\n                    <ion-input type=\\\"decimal\\\" formControlName=\\\"price\\\" placeholder=\\\"Price\\\" minlength=\\\"5\\\" maxlength=\\\"6\\\" required></ion-input>\\r\\n                    <div style=\\\"color:red;\\\" *ngIf=\\\"isValidInput('price')\\\" class=\\\"alert alert-danger\\\">\\r\\n                        <div *ngIf=\\\"addCoSpaceForm.controls['price'].errors.required\\\">\\r\\n                            price is required\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"addCoSpaceForm.controls['price'].errors.pattern\\\">\\r\\n                            price format\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"addCoSpaceForm.controls['price'].hasError('maxlength')\\\">\\r\\n                            minLength is 5\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"addCoSpaceForm.controls['price'].hasError('minlength')\\\">\\r\\n                            maxLength is 3\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-textarea type=\\\"text\\\" formControlName=\\\"description\\\" placeholder=\\\"Description\\\" style=\\\"border-style: solid;height: 15%;border-width: 1px;border-color: #16D6E3;border-top: 0px;margin: 0px;\\\"></ion-textarea>\\r\\n                <div style=\\\"color:red;\\\" *ngIf=\\\"!description?.valid && (description?.dirty || description?.touched)\\\">\\r\\n                    Invalid description\\r\\n                    <div *ngIf=\\\"description.errors.required\\\">\\r\\n                        description is required\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"description.errors.maxlength\\\">\\r\\n                        maxlength is 150\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"description.errors.minlength\\\">\\r\\n                        minlength is 5\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <p style=\\\"font-size: 18px;font-weight: bold; text-align: center\\\">Enter your address below.</p>\\r\\n                <ion-item>\\r\\n                    <ion-input formControlName=\\\"address\\\" placeholder=\\\"Address\\\"></ion-input>\\r\\n                    <div style=\\\"color:red;\\\" *ngIf=\\\"!address?.valid && (address?.dirty || address?.touched)\\\">\\r\\n                        Invalid description\\r\\n                        <div *ngIf=\\\"address.errors.required\\\">\\r\\n                            address is required\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ion-item>\\r\\n                <ion-item>\\r\\n                    <ion-input formControlName=\\\"city\\\" placeholder=\\\"City\\\"></ion-input>\\r\\n                    <div style=\\\"color:red;\\\" *ngIf=\\\"!city?.valid && (city?.dirty || city?.touched)\\\">\\r\\n                        Invalid city\\r\\n                        <div *ngIf=\\\"city.errors.required\\\">\\r\\n                            address is required\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ion-item>\\r\\n                <ion-item>\\r\\n                    <ion-input formControlName=\\\"province\\\" placeholder=\\\"Province\\\"></ion-input>\\r\\n                    <div style=\\\"color:red;\\\" *ngIf=\\\"!province?.valid && (province?.dirty || province?.touched)\\\">\\r\\n                        Invalid province\\r\\n                        <div *ngIf=\\\"province.errors.required\\\">\\r\\n                            province is required\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </ion-item>\\r\\n                <div style=\\\"height: 40%; width: 100%; overflow: visible;\\\">\\r\\n                 \\r\\n                    <ion-grid>\\r\\n                        <ion-row style=\\\"color: black;margin: 5px; position: relative;\\\">\\r\\n                            <ion-col *ngFor=\\\"let amenities of amenitiesData\\\">\\r\\n                                <div style=\\\"font-size: 14px; border-style: solid 3px;border-color: #16D6E3;\\\">{{ amenities.name }} <br>\\r\\n                                    <input type=\\\"checkbox\\\" formControlName=\\\"nameAnim\\\" (change)=\\\"onChange(amenities.name, $event.target.checked)\\\" />\\r\\n                                </div>\\r\\n                            </ion-col>\\r\\n                            <div style=\\\"color:red;\\\" *ngIf=\\\"isValidInput('nameAnim')\\\" class=\\\"alert alert-danger\\\">\\r\\n                                <div *ngIf=\\\"addCoSpaceForm.controls['nameAnim'].errors.required\\\">\\r\\n                                    Atleast one Amenity should be selected\\r\\n                                </div>\\r\\n\\r\\n                            </div>\\r\\n                        </ion-row>\\r\\n                    </ion-grid>\\r\\n                 \\r\\n\\r\\n                    <ion-button class=\\\"btn-submit\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!addCoSpaceForm.valid\\\" style=\\\"--background:#9010F5; width: 193px; height: 55px;\\\">Submit</ion-button>\\r\\n\\r\\n\\r\\n\\r\\n                    <ion-button class=\\\"spaces\\\" (click)=\\\"view()\\\" style=\\\"--background: #16D6E3; width: 190px; height: 55px; margin-left: -30px;\\\">View Spaces</ion-button>\\r\\n\\r\\n                  \\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n\\r\\n    </div> -->\\r\\n\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AddSpacePage } from './add-space.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: AddSpacePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AddSpacePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\nimport {  ReactiveFormsModule } from '@angular/forms';\r\nimport { AddSpacePageRoutingModule } from './add-space-routing.module';\r\n\r\nimport { AddSpacePage } from './add-space.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    IonicModule,\r\n    AddSpacePageRoutingModule\r\n  ],\r\n  declarations: [AddSpacePage]\r\n})\r\nexport class AddSpacePageModule {}\r\n","export default \".holder {\\n  width: 100%;\\n  height: 100%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  position: relative;\\n}\\n\\n.top {\\n  width: 100%;\\n  height: 16%;\\n  position: absolute;\\n  top: 0px;\\n  background-color: #9010F5;\\n  text-align: center;\\n}\\n\\n.bottom {\\n  width: 100%;\\n  height: 80%;\\n  position: absolute;\\n  bottom: 0px;\\n}\\n\\nion-select {\\n  font-size: 10px;\\n}\\n\\n.viewspaces {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  font-size: 40px;\\n  color: #9010F5;\\n  margin-top: -10px;\\n}\\n\\n.btn-submit {\\n  border-top-left-radius: 100%;\\n}\\n\\n.spaces {\\n  border-top-right-radius: 100%;\\n}\\n\\n.buttons2 {\\n  width: 100%;\\n  height: 55px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYWRkLXNwYWNlL2FkZC1zcGFjZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0VBQ0Esa0JBQUE7QUFDSjs7QUFDQTtFQUNJLFdBQUE7RUFDQSxXQUFBO0VBQ0Esa0JBQUE7RUFDQSxRQUFBO0VBQ0EseUJBQUE7RUFDQSxrQkFBQTtBQUVKOztBQUNBO0VBQ0ksV0FBQTtFQUNBLFdBQUE7RUFDQSxrQkFBQTtFQUNBLFdBQUE7QUFFSjs7QUFFQTtFQUNJLGVBQUE7QUFDSjs7QUFFQTtFQUNJLGFBQUE7RUFDQSxzQkFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0VBQ0EsY0FBQTtFQUNBLGlCQUFBO0FBQ0o7O0FBRUE7RUFDSSw0QkFBQTtBQUNKOztBQUVBO0VBQ0ksNkJBQUE7QUFDSjs7QUFFQTtFQUNJLFdBQUE7RUFDQSxZQUFBO0FBQ0oiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hZGQtc3BhY2UvYWRkLXNwYWNlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ob2xkZXJ7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuLnRvcHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxNiU7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IzkwMTBGNTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIC8vIG9wYWNpdHk6IDgwJTtcclxufVxyXG4uYm90dG9te1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDgwJTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGJvdHRvbTogMHB4O1xyXG4gICAgLy9ib3JkZXItc3R5bGU6IGRvdHRlZDtcclxuXHJcbn1cclxuaW9uLXNlbGVjdHtcclxuICAgIGZvbnQtc2l6ZTogMTBweDtcclxufVxyXG5cclxuLnZpZXdzcGFjZXN7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGZvbnQtc2l6ZTogNDBweDtcclxuICAgIGNvbG9yOiAjOTAxMEY1OyAgXHJcbiAgICBtYXJnaW4tdG9wOiAtMTBweDsgIFxyXG59XHJcblxyXG4uYnRuLXN1Ym1pdHtcclxuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDEwMCU7XHJcbn1cclxuXHJcbi5zcGFjZXN7XHJcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMTAwJTtcclxufVxyXG5cclxuLmJ1dHRvbnMye1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDU1cHg7XHJcbiAgICAvLyBkaXNwbGF5OiBmbGV4O1xyXG4gICAgLy8gYmFja2dyb3VuZC1jb2xvcjogIzkwMTBGNTtcclxuICAgIC8vIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDE2JTtcclxuICAgIC8vIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiA1MCU7XHJcbiAgICAvLyBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogNTAlO1xyXG4gICAgLy8gbWFyZ2luLWJvdHRvbTogLTEwMHB4O1xyXG59XHJcblxyXG4vLyAuc2hhcGUye1xyXG4vLyAgICAgd2lkdGg6IDcwJTtcclxuLy8gICAgIGhlaWdodDogMjUlO1xyXG4vLyAgICAgZGlzcGxheTogZmxleDtcclxuLy8gICAgIGJhY2tncm91bmQtY29sb3I6ICMxNkQ2RTM7XHJcbi8vICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMTYlO1xyXG4vLyAgICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogNTAlO1xyXG4vLyAgICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogNTAlO1xyXG4vLyAgICAgbWFyZ2luLWxlZnQ6IDE2MHB4O1xyXG4vLyAgICAgbWFyZ2luLWJvdHRvbTogLTQwMHB4O1xyXG4vLyB9Il19 */\";","import { Component, NgZone, OnInit, ViewChild } from '@angular/core';\r\nimport { SignInSignUpService } from 'src/app/sign-in-sign-up.service';\r\nimport firebase from 'firebase/app';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport { IonInfiniteScroll } from '@ionic/angular';\r\nimport { FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\r\n\r\n\r\nimport { ModalController } from '@ionic/angular';\r\nimport { OwnerServiceService } from 'src/app/services/owner.service';\r\n\r\nimport {  PopoverController } from '@ionic/angular';\r\nimport { MassegesPage } from 'src/app/feedback/masseges/masseges.page';\r\nimport {  LoadingController,AlertController } from '@ionic/angular';\r\n\r\n\r\n\r\nexport interface amenities {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-add-space',\r\n  templateUrl: './add-space.page.html',\r\n  styleUrls: ['./add-space.page.scss'],\r\n})\r\nexport class AddSpacePage implements OnInit {\r\n  form: FormGroup;\r\n  profileUid:any\r\n  amenityList:any=[];\r\n  amenitie:any=[]\r\n  amenitiesData: amenities[] = [\r\n    { id: 0, name: 'cameras' },\r\n    { id: 1, name: 'reception' },\r\n    { id: 2, name: 'projector' },\r\n    { id: 3, name: 'coffee'},\r\n    { id: 4, name: 'wifi'},\r\n    { id: 5, name: 'tv'},\r\n    { id: 7, name: 'Aircon'}\r\n  ];\r\n  ret_arr: any[];\r\n  ret_array:any = [];\r\n  onChange(name: string, isChecked: boolean) {\r\n    const cartoons = (this.addCoSpaceForm.controls.name as FormArray);\r\n    \r\n    if (isChecked) {\r\n      cartoons.push(new FormControl(name));\r\n      this.amenitie = cartoons;\r\n      this.amenityList.push((name));\r\n    } else {\r\n      const index = cartoons.controls.findIndex(x => x.value === name);\r\n      cartoons.removeAt(index);\r\n    }\r\n  }\r\n\r\n  imageError: string;\r\n  isImageSaved: boolean;\r\n  EditIsImageSaved: boolean;\r\n  cardImageBase64: string;\r\n\r\n  ////update coworking space///\r\n  viewSpace = 0; \r\n  spaces:any=[]\r\n  spacesT:any=[]\r\n\r\n\r\n\r\n  spacesTT:any=[]\r\n  constructor(private popover:PopoverController,private formBuilder:FormBuilder,public ownerservice:OwnerServiceService,public account:SignInSignUpService,public loadingCtrl: LoadingController, private router: Router,private alertCtrl: AlertController) { \r\n    \r\n    firebase.firestore().collection(\"profiles\")\r\n                        .doc(this.account.getUserSession())\r\n                        .collection(\"profile\")\r\n                        .where(\"uid\",\"==\",this.account.getUserSession())\r\n.get()\r\n.then(doc => {\r\n\r\n    doc.forEach(dat=>{\r\n      // console.log(\"hh\"+dat.id) \r\n      this.profileUid=dat.id;\r\n    })\r\n})\r\n  }\r\n\r\n  addCoSpaceForm = this.formBuilder.group({\r\n    categories: ['', Validators.required],\r\n    category_number:  ['', Validators.required],\r\n    address: ['', [Validators.required]],\r\n    city: ['', [Validators.required]],\r\n    province: ['', [Validators.required]],\r\n    description:['',[Validators.required,Validators.maxLength(150),Validators.minLength(20)]],\r\n    price: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(6), Validators.pattern(/^[0-9]+.[0-9]{2}/g)]],\r\n    name: this.formBuilder.array([]),\r\n    nameAnim:[false, Validators.requiredTrue]\r\n    \r\n});\r\nisValidInput(fieldName): boolean {\r\n  return this.addCoSpaceForm.controls[fieldName].invalid &&\r\n    (this.addCoSpaceForm.controls[fieldName].dirty || this.addCoSpaceForm.controls[fieldName].touched);\r\n}\r\nget description() {\r\n  return this.addCoSpaceForm.get(\"description\");\r\n}\r\nget price() {\r\n  return this.addCoSpaceForm.get(\"price\");\r\n}\r\n\r\nget categories() {\r\n  return this.addCoSpaceForm.get(\"categories\");\r\n}\r\nget category_number() {\r\n  return this.addCoSpaceForm.get(\"category_number\");\r\n}\r\n\r\nget address() {\r\n  return this.addCoSpaceForm.get(\"address\");\r\n}\r\nget city() {\r\n  return this.addCoSpaceForm.get(\"city\");\r\n}\r\nget province() {\r\n  return this.addCoSpaceForm.get(\"province\");\r\n}\r\nget name() {\r\n  return this.addCoSpaceForm.get(\"name\");\r\n}\r\n\r\n\r\npublic errorMessages = {\r\n  price: [\r\n    { type: 'required', message: 'price is required' }\r\n  ],\r\n  description: [\r\n    { type: 'required', message: 'description is required' }\r\n  ],\r\n  categories: [\r\n    { type: 'required', message: 'categories is required' }\r\n  ],\r\n  category_number: [\r\n    { type: 'required', message: 'category_number is required' }\r\n  ],\r\n  \r\n  address:[\r\n    { type: 'required', message: 'address is required' }\r\n  ],\r\n  city:[\r\n    { type: 'required', message: 'city is required' }\r\n  ],\r\n  province:[\r\n    { type: 'required', message: 'province is required' }\r\n  ],\r\n  name:[\r\n    { type: 'required', message: 'name is required' }\r\n  ]\r\n \r\n};\r\nfileChangeEvent(fileInput: any) {\r\n\r\n\r\n\r\n  this. imageError = null;\r\n  if(fileInput.target.files && fileInput.target.files[0]){\r\n      const max_size = 20971520;\r\n      const allowed_types = ['image/png', 'image/jpeg'];\r\n      const max_height = 15200;\r\n      const max_width = 25600;   \r\n      if(fileInput.target.files[0].size > max_size){\r\n        this.imageError = 'Maximum size allowed is ' + max_size / 1000 + 'Mb';\r\n        return false;\r\n      }\r\n      if (!allowed_types.includes( fileInput.target.files[0].type)) {\r\n        this.imageError = 'Only Images are allowed ( JPG | PNG )';\r\n        return false;\r\n      }\r\n      const reader = new FileReader();\r\n      reader.onload = (e:any)=>{\r\n          const image = new Image();\r\n          image.src = e.target.result;\r\n          image.onload = rs=> {\r\n            const img_height = rs.currentTarget['height'];\r\n            const img_width = rs.currentTarget['width'];\r\n            console.log(img_height,img_width);\r\n            if(img_height > max_height && img_width > max_width){\r\n              this.imageError =\r\n              'Maximum dimentions allowed ' +\r\n              max_height +\r\n              '*' +\r\n              max_width +\r\n              'px';\r\n              return false;\r\n            }else{\r\n              const imgBase64Path = e.target.result;\r\n              this.cardImageBase64 = imgBase64Path;\r\n              this.isImageSaved = true;\r\n             return this.cardImageBase64;\r\n            }\r\n          }\r\n        }\r\n      reader.readAsDataURL(fileInput.target.files[0])\r\n  }\r\n\r\n}\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  submit() {\r\n//console.log(this.addCoSpaceForm.value.name) \r\n  this.ownerservice. addcoworkingSpace(this.account.getUserSession(),this.profileUid,\r\n                                       this.addCoSpaceForm.value.categories,\r\n                                       this.addCoSpaceForm.value.category_number,\r\n                                       this.addCoSpaceForm.value.address,\r\n                                       this.addCoSpaceForm.value.city,\r\n                                       this.addCoSpaceForm.value.province,\r\n                                       this.addCoSpaceForm.value.name,\r\n                                       this.cardImageBase64,\r\n                                       this.addCoSpaceForm.value.price,\r\n                                      this.addCoSpaceForm.value.description) \r\n    // this.reload();\r\n                                      //  this.  CreatePopover()\r\n  }\r\n\r\n    // async reload() {\r\n    //   const loading = await this.loadingCtrl.create({\r\n    //     message: 'Please wait...',\r\n    //     // duration: 3000\r\n    //   });\r\n    //   this.router.navigateByUrl('/owner-landing');\r\n    //   await loading.present();\r\n    // }\r\n \r\n  workingSpaces(){\r\n    firebase.firestore().collection(\"profiles\")\r\n    .doc(this.account.getUserSession())\r\n    .collection(\"profile\").doc(this.profileUid).collection(\"space\")\r\n    .where(\"uid\",\"==\",this.account.getUserSession())\r\n    .get()\r\n    .then(snap => {\r\n\r\n      snap.forEach(doc => {\r\n        var array:any=[]\r\n    \r\n      // array.push(Object.assign(doc.data(),{'cateuid':this.profileUid}) );\r\n     array.push(doc.data().categories );\r\n     this.ownerservice.setWorkSpaceUID(doc.data().workspace_uid)\r\n  \r\n  //  this.spaces.push(this.remove_duplicates(array))  \r\n\r\n  this.unique(array)\r\n console.log(this.returnUniq()) \r\n\r\n      });\r\n    });\r\n   \r\n  }\r\n\r\n  unique(array){\r\n    for(var i in array){\r\n      if(this.ret_array.indexOf(array[i]) === -1){\r\n        this.ret_array.push(array[i]);\r\n        // console.log(this.ret_array) \r\n      }\r\n  }\r\n}\r\n\r\nreturnUniq(){\r\n  return this.ret_array;\r\n}\r\n\r\n  view(){\r\n     this.viewSpace =1;\r\n     this.workingSpaces()\r\n  }\r\n\r\n  CreatePopover()\r\n  {\r\n    this.popover.create({component:MassegesPage,\r\n    showBackdrop:false}).then((popoverElement)=>{\r\n      popoverElement.present();\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n"]}