{"version":3,"sources":["webpack:///src/app/pages/walkins/walkins.page.html","webpack:///src/app/pages/walkins/walkins-routing.module.ts","webpack:///src/app/pages/walkins/walkins.module.ts","webpack:///src/app/pages/walkins/walkins.page.scss","webpack:///src/app/pages/walkins/walkins.page.ts"],"names":["routes","path","component","WalkinsPageRoutingModule","imports","forChild","exports","WalkinsPageModule","declarations","WalkinsPage","popover","account","route","ownerservice","formBuilder","loadingCtrl","router","alertCtrl","spaceuid","snapshot","params","category","profileuid","walkinsForm","group","name","required","maxLength","minLength","pattern","surname","email","phone","checkin","checkout","timein","timeout","proccessWalkin","console","log","walkinBooking","getUserSession","value","fieldName","controls","invalid","dirty","touched","create","message","duration","then","res","present","onDidDismiss","dis","buttons","text","handler","navigateByUrl","alert","loader","get","selector","template"],"mappings":"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","file":"pages-walkins-walkins-module-es5.js","sourcesContent":["export default \"<!-- <ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    <ion-title>walkins</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header> -->\\r\\n<!-- \\r\\n<ion-buttons slot=\\\"start\\\">\\r\\n  <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\r\\n</ion-buttons> -->\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <div style=\\\"border: 1px solid white;height: 100%;  background-image: url(../assets/background2.png)\\\">\\r\\n    <div style=\\\"height: 100%;width: 100%; border: 1px solid white;background-color: white;bottom: 0%;left: 0;position: absolute;border-top-right-radius:20%;border-bottom-right-radius:10%\\\" >\\r\\n     \\r\\n  <div>\\r\\n    <ion-grid style=\\\"padding-top:10%;padding-bottom:5%;\\\">\\r\\n      <ion-row>\\r\\n        <ion-buttons style=\\\"color:#1E3D58\\\" >\\r\\n          <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n      </ion-row>\\r\\n      <ion-row><h1 style=\\\"font-family: Arial, Helvetica, sans-serif;color:#1E3D58 ;\\\">REGISTER WALKIN</h1></ion-row>\\r\\n    </ion-grid>\\r\\n  </div>\\r\\n \\r\\n  <div style=\\\"border:1px solid white;bottom:0%;;position:relative;height: 70%;overflow: scroll;\\\">\\r\\n  <form [formGroup]=\\\"walkinsForm\\\">\\r\\n    \\r\\n        <ion-grid  style=\\\"width: 100%;\\\">\\r\\n          <ion-row>\\r\\n            <div style=\\\"padding-bottom: 5%;width: 100%;\\\">\\r\\n              <ion-input style=\\\"width: 100%;\\\" type=\\\"text\\\" formControlName=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Name\\\" style=\\\"background-color: #E8EEF1;border-radius: 20px;\\\"></ion-input>\\r\\n            </div>\\r\\n            <div style=\\\"color:red;width:100%;\\\" *ngIf=\\\"isValidInput('name')\\\"\\r\\n            class=\\\"alert alert-danger\\\">\\r\\n            <div *ngIf=\\\"walkinsForm.controls['name'].errors.required\\\">\\r\\n              name is required.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"walkinsForm.controls['name'].errors.maxLength\\\">\\r\\n             Maximum length is 20\\r\\n            </div>\\r\\n            <div *ngIf=\\\"walkinsForm.controls['name'].errors.minLength\\\">\\r\\n              min length is 2\\r\\n             </div>\\r\\n             <div *ngIf=\\\"walkinsForm.controls['name'].errors.pattern\\\">\\r\\n              Chars are not allowed\\r\\n             </div>\\r\\n          </div>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <div style=\\\"padding-bottom: 5%;width: 100%;\\\">\\r\\n            <ion-input style=\\\"width: 100%;\\\" type=\\\"text\\\" formControlName=\\\"surname\\\" placeholder=\\\"surname\\\"style=\\\"background-color: #E8EEF1;border-radius: 20px;\\\"></ion-input>\\r\\n          </div>\\r\\n          <div style=\\\"color:red;\\\" *ngIf=\\\"isValidInput('surname')\\\"\\r\\n          class=\\\"alert alert-danger\\\">\\r\\n          <div *ngIf=\\\"walkinsForm.controls['surname'].errors.required\\\">\\r\\n            surname is required.\\r\\n          </div>\\r\\n          <div *ngIf=\\\"walkinsForm.controls['surname'].errors.maxLength\\\">\\r\\n           Maximum length is 20\\r\\n          </div>\\r\\n          <div *ngIf=\\\"walkinsForm.controls['surname'].errors.minLength\\\">\\r\\n            min length is 2\\r\\n           </div>\\r\\n          \\r\\n        </div>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <div style=\\\"padding-bottom: 5%;width: 100%;\\\">\\r\\n            <ion-input style=\\\"width: 100%;\\\" type=\\\"email\\\" formControlName=\\\"email\\\" placeholder=\\\"email\\\"style=\\\"background-color: #E8EEF1;border-radius: 20px;\\\"></ion-input>\\r\\n            </div>\\r\\n            <div style=\\\"color:red;\\\" *ngIf=\\\"isValidInput('email')\\\"\\r\\n            class=\\\"alert alert-danger\\\">\\r\\n            <div *ngIf=\\\"walkinsForm.controls['email'].errors.required\\\">\\r\\n             Email is required\\r\\n            </div>\\r\\n             <div *ngIf=\\\"walkinsForm.controls['email'].errors.pattern\\\">\\r\\n            incorrect email format\\r\\n             </div>\\r\\n            </div>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <div style=\\\"padding-bottom: 5%;width: 100%;\\\">\\r\\n            <ion-input style=\\\"width: 100%;\\\" type=\\\"number\\\" formControlName=\\\"phone\\\" placeholder=\\\"phone\\\"style=\\\"background-color: #E8EEF1;border-radius: 20px;\\\"></ion-input>\\r\\n            </div>\\r\\n            <div style=\\\"color:red;\\\" *ngIf=\\\"isValidInput('phone')\\\"\\r\\n            class=\\\"alert alert-danger\\\">\\r\\n            <div *ngIf=\\\"walkinsForm.controls['phone'].errors.required\\\">\\r\\n              phone is required.\\r\\n            </div>\\r\\n            <div *ngIf=\\\"walkinsForm.controls['phone'].errors.maxLength\\\">\\r\\n             Maximum length is 10\\r\\n            </div>\\r\\n             <div *ngIf=\\\"walkinsForm.controls['phone'].errors.pattern\\\">\\r\\n              Incorrect phone number\\r\\n             </div>\\r\\n          </div>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-label style=\\\"font-family: Arial, Helvetica, sans-serif;font-size: .9em;color:#057DCD;font-weight: bold;\\\">Checkin </ion-label>\\r\\n              <ion-input style=\\\"width: 100%;\\\" type=\\\"date\\\" formControlName=\\\"checkin\\\"  style=\\\"background-color: #E8EEF1;border-radius: 20px;\\\" placeholder=\\\"phone\\\"></ion-input>\\r\\n              <div style=\\\"color:red;width: 100%;\\\" *ngIf=\\\"isValidInput('checkin')\\\"\\r\\n              class=\\\"alert alert-danger\\\">\\r\\n              <div *ngIf=\\\"walkinsForm.controls['checkin'].errors.required\\\">\\r\\n                checkin is required\\r\\n              </div>\\r\\n              </div>\\r\\n            </ion-col>\\r\\n            <ion-col>\\r\\n              <ion-label style=\\\"font-family: Arial, Helvetica, sans-serif;font-size: .9em;color:#057DCD;font-weight: bold;\\\">Timein </ion-label>\\r\\n              <ion-input style=\\\"width: 100%;\\\" type=\\\"time\\\" formControlName=\\\"timein\\\" style=\\\"background-color: #E8EEF1;border-radius: 20px;\\\" placeholder=\\\"phone\\\"></ion-input>\\r\\n              <div style=\\\"color:red;width: 100%;\\\" *ngIf=\\\"isValidInput('timein')\\\"\\r\\n    class=\\\"alert alert-danger\\\">\\r\\n    <div *ngIf=\\\"walkinsForm.controls['timein'].errors.required\\\">\\r\\n      timein is required\\r\\n    </div>\\r\\n    </div>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-label style=\\\"font-family: Arial, Helvetica, sans-serif;font-size: .9em;color:#057DCD;font-weight: bold;\\\">Checkout </ion-label>\\r\\n              <ion-input style=\\\"width: 100%;\\\" type=\\\"date\\\"  formControlName=\\\"checkout\\\"  style=\\\"background-color: #E8EEF1;border-radius: 20px;\\\" placeholder=\\\"phone\\\"></ion-input>\\r\\n              <div style=\\\"color:red;width: 100%;\\\" *ngIf=\\\"isValidInput('checkout')\\\"\\r\\n              class=\\\"alert alert-danger\\\">\\r\\n              <div *ngIf=\\\"walkinsForm.controls['checkout'].errors.required\\\">\\r\\n                checkout is required\\r\\n              </div>\\r\\n              </div>\\r\\n            </ion-col>\\r\\n            <ion-col>\\r\\n              <ion-label style=\\\"font-family: Arial, Helvetica, sans-serif;font-size: .9em;color:#057DCD;font-weight: bold;\\\">timein </ion-label>\\r\\n              <ion-input style=\\\"width: 100%;\\\" type=\\\"time\\\"  formControlName=\\\"timeout\\\" style=\\\"background-color: #E8EEF1;border-radius: 20px;\\\" placeholder=\\\"phone\\\"></ion-input>\\r\\n              <div style=\\\"color:red;\\\" *ngIf=\\\"isValidInput('timeout')\\\"\\r\\n              class=\\\"alert alert-danger\\\">\\r\\n              <div *ngIf=\\\"walkinsForm.controls['timeout'].errors.required\\\">\\r\\n                timeout is required\\r\\n              </div>\\r\\n              </div>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n         <ion-row>\\r\\n           <div style=\\\"width:100%;padding-top:5%;padding-bottom:5%; \\\">\\r\\n            <ion-button [disabled]=\\\"!walkinsForm.valid\\\"   (click)=\\\"walkinsBooking()\\\"  style=\\\"width: 100%;border-radius: 10px;background-color: #1E3D58;\\\">BOOK</ion-button>\\r\\n           </div>\\r\\n         </ion-row>\\r\\n        </ion-grid>\\r\\n    \\r\\n    </form>\\r\\n  </div>\\r\\n    </div>\\r\\n   </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <!-- -----------------------------------------\\r\\n  -----------------------------------------\\r\\n  -----------------------------------------\\r\\n   -->\\r\\n\\r\\n  <!-- <div class=\\\"top\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    \\r\\n    <h1 style=\\\"font-size: 20px; text-align: center;color: white;\\\">Register walk-ins below</h1>\\r\\n  \\r\\n  </div>\\r\\n  <div class=\\\"curve\\\">\\r\\n    \\r\\n  </div>\\r\\n  \\r\\n  <div class=\\\"wrapper\\\">\\r\\n\\r\\n<form [formGroup]=\\\"walkinsForm\\\">\\r\\n  <ion-grid>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n        <ion-item>\\r\\n        <ion-input formControlName=\\\"name\\\" type=\\\"text\\\" placeholder=\\\"Name\\\"></ion-input>\\r\\n        </ion-item>\\r\\n      </ion-col>\\r\\n      <div style=\\\"color:red;\\\" *ngIf=\\\"isValidInput('name')\\\"\\r\\n      class=\\\"alert alert-danger\\\">\\r\\n      <div *ngIf=\\\"walkinsForm.controls['name'].errors.required\\\">\\r\\n        name is required.\\r\\n      </div>\\r\\n      <div *ngIf=\\\"walkinsForm.controls['name'].errors.maxLength\\\">\\r\\n       Maximum length is 20\\r\\n      </div>\\r\\n      <div *ngIf=\\\"walkinsForm.controls['name'].errors.minLength\\\">\\r\\n        min length is 2\\r\\n       </div>\\r\\n       <div *ngIf=\\\"walkinsForm.controls['name'].errors.pattern\\\">\\r\\n        Chars are not allowed\\r\\n       </div>\\r\\n    </div>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n      <ion-item>\\r\\n      <ion-input formControlName=\\\"surname\\\" type=\\\"text\\\" placeholder=\\\"Surname\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    </ion-col>\\r\\n      <div style=\\\"color:red;\\\" *ngIf=\\\"isValidInput('surname')\\\"\\r\\n      class=\\\"alert alert-danger\\\">\\r\\n      <div *ngIf=\\\"walkinsForm.controls['surname'].errors.required\\\">\\r\\n        surname is required.\\r\\n      </div>\\r\\n      <div *ngIf=\\\"walkinsForm.controls['surname'].errors.maxLength\\\">\\r\\n       Maximum length is 20\\r\\n      </div>\\r\\n      <div *ngIf=\\\"walkinsForm.controls['surname'].errors.minLength\\\">\\r\\n        min length is 2\\r\\n       </div>\\r\\n       <div *ngIf=\\\"walkinsForm.controls['surname'].errors.pattern\\\">\\r\\n        Chars are not allowed\\r\\n       </div>\\r\\n    </div>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n      <ion-item>\\r\\n      <ion-input formControlName=\\\"email\\\" type=\\\"email\\\" placeholder=\\\"Email\\\"></ion-input>\\r\\n      </ion-item>\\r\\n      </ion-col>\\r\\n      <div style=\\\"color:red;\\\" *ngIf=\\\"isValidInput('email')\\\"\\r\\n      class=\\\"alert alert-danger\\\">\\r\\n      <div *ngIf=\\\"walkinsForm.controls['email'].errors.required\\\">\\r\\n       Email is required\\r\\n      </div>\\r\\n       <div *ngIf=\\\"walkinsForm.controls['email'].errors.pattern\\\">\\r\\n      incorrect email format\\r\\n       </div>\\r\\n      </div>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n      <ion-item>\\r\\n      <ion-input formControlName=\\\"phone\\\" type=\\\"number\\\" placeholder=\\\"Phone\\\"></ion-input>\\r\\n      </ion-item>\\r\\n      </ion-col>\\r\\n      <div style=\\\"color:red;\\\" *ngIf=\\\"isValidInput('phone')\\\"\\r\\n      class=\\\"alert alert-danger\\\">\\r\\n      <div *ngIf=\\\"walkinsForm.controls['phone'].errors.required\\\">\\r\\n        phone is required.\\r\\n      </div>\\r\\n      <div *ngIf=\\\"walkinsForm.controls['phone'].errors.maxLength\\\">\\r\\n       Maximum length is 10\\r\\n      </div>\\r\\n       <div *ngIf=\\\"walkinsForm.controls['phone'].errors.pattern\\\">\\r\\n        Incorrect phone number\\r\\n       </div>\\r\\n    </div>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n      <ion-input formControlName=\\\"checkin\\\" type=\\\"date\\\" placeholder=\\\"checkin\\\"></ion-input>\\r\\n      <div style=\\\"color:red;\\\" *ngIf=\\\"isValidInput('checkin')\\\"\\r\\n      class=\\\"alert alert-danger\\\">\\r\\n      <div *ngIf=\\\"walkinsForm.controls['checkin'].errors.required\\\">\\r\\n        checkin is required\\r\\n      </div>\\r\\n      </div>\\r\\n    </ion-col>\\r\\n    <ion-col>\\r\\n      \\r\\n      <ion-input formControlName=\\\"timein\\\" type=\\\"time\\\" placeholder=\\\"timein\\\" ></ion-input>\\r\\n    </ion-col>\\r\\n    <div style=\\\"color:red;\\\" *ngIf=\\\"isValidInput('timein')\\\"\\r\\n    class=\\\"alert alert-danger\\\">\\r\\n    <div *ngIf=\\\"walkinsForm.controls['timein'].errors.required\\\">\\r\\n      timein is required\\r\\n    </div>\\r\\n    </div>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-col>\\r\\n   \\r\\n      <ion-input formControlName=\\\"checkout\\\"  type=\\\"date\\\"></ion-input>\\r\\n      <div style=\\\"color:red;\\\" *ngIf=\\\"isValidInput('checkout')\\\"\\r\\n      class=\\\"alert alert-danger\\\">\\r\\n      <div *ngIf=\\\"walkinsForm.controls['checkout'].errors.required\\\">\\r\\n        checkout is required\\r\\n      </div>\\r\\n      </div>\\r\\n    </ion-col>\\r\\n    <ion-col>\\r\\n    \\r\\n      <ion-input formControlName=\\\"timeout\\\" type=\\\"time\\\" placeholder=\\\"timeout\\\" ></ion-input>\\r\\n      <div style=\\\"color:red;\\\" *ngIf=\\\"isValidInput('timeout')\\\"\\r\\n      class=\\\"alert alert-danger\\\">\\r\\n      <div *ngIf=\\\"walkinsForm.controls['timeout'].errors.required\\\">\\r\\n        timeout is required\\r\\n      </div>\\r\\n      </div>\\r\\n    </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n      <ion-button [disabled]=\\\"!walkinsForm.valid\\\"   (click)=\\\"walkinsBooking()\\\" expand=\\\"full\\\">BOOK</ion-button>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n  \\r\\n  \\r\\n</form> -->\\r\\n\\r\\n<!-- [disabled]=\\\"!walkinsForm.valid\\\" -->\\r\\n\\r\\n<!-- </div> -->\\r\\n\\r\\n</ion-content>\\r\\n\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { WalkinsPage } from './walkins.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: WalkinsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class WalkinsPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\nimport {  ReactiveFormsModule } from '@angular/forms';\r\nimport { WalkinsPageRoutingModule } from './walkins-routing.module';\r\n\r\nimport { WalkinsPage } from './walkins.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    WalkinsPageRoutingModule\r\n  ],\r\n  declarations: [WalkinsPage]\r\n})\r\nexport class WalkinsPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3dhbGtpbnMvd2Fsa2lucy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n// import { AlertController } from '@ionic/angular/providers/alert-controller';\r\nimport { IonInfiniteScroll, LoadingController,AlertController } from '@ionic/angular';\r\nimport { OwnerServiceService } from 'src/app/services/owner.service';\r\nimport { SignInSignUpService } from 'src/app/sign-in-sign-up.service';\r\nimport { PopoverController } from '@ionic/angular';\r\n@Component({\r\n  selector: 'app-walkins',\r\n  templateUrl: './walkins.page.html',\r\n  styleUrls: ['./walkins.page.scss'],\r\n})\r\nexport class WalkinsPage implements OnInit {\r\n  spaceuid = this.route.snapshot.params.spaceuid;\r\n  category = this.route.snapshot.params.category;\r\n  profileuid = this.route.snapshot.params.profileuid;\r\n  constructor(private popover:PopoverController,public account:SignInSignUpService,private route:ActivatedRoute,public ownerservice:OwnerServiceService,private formBuilder:FormBuilder,public loadingCtrl: LoadingController, private router: Router,private alertCtrl: AlertController) { }\r\n  walkinsForm = this.formBuilder.group({\r\n    name:['', [Validators.required,Validators.maxLength(20),Validators.minLength(2),Validators.pattern('^[_A-z0-9]*((-|\\s)*[_A-z0-9])*$')]],\r\n    surname: ['', [Validators.required,Validators.maxLength(20),Validators.minLength(2),Validators.pattern('^[_A-z0-9]*((-|\\s)*[_A-z0-9])*$')]],\r\n    email: ['', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$')]],\r\n    phone:  ['', [Validators.required, Validators.maxLength(10), Validators.pattern('^[0-9]+$')]],\r\n    checkin: ['', [Validators.required]],\r\n    checkout: ['', [Validators.required]],\r\n    timein: ['', [Validators.required]],\r\n    timeout: ['', [Validators.required]]   \r\n});\r\n\r\n\r\nget checkin() {\r\n  return this.walkinsForm.get(\"checkin\");\r\n}\r\nget checkout() {\r\n  return this.walkinsForm.get(\"checkout\");\r\n}\r\nget timein() {\r\n  return this.walkinsForm.get(\"timein\");\r\n}\r\nget timeout() {\r\n  return this.walkinsForm.get(\"timeout\");\r\n}\r\nget name() {\r\n  return this.walkinsForm.get(\"name\");\r\n}\r\nget surname() {\r\n  return this.walkinsForm.get(\"surname\");\r\n}\r\nget email() {\r\n  return this.walkinsForm.get(\"email\");\r\n}\r\nget phone() {\r\n  return this.walkinsForm.get(\"phone\");\r\n}\r\n//this.reservationForm.value.timeout\r\n\r\n\r\n\r\n  walkinsBooking() {\r\n    this.proccessWalkin();\r\n console.log(this.profileuid,this.spaceuid)\r\nthis.ownerservice.walkinBooking(this.account.getUserSession(),this.profileuid,this.spaceuid,this.walkinsForm.value.name,\r\n  this.walkinsForm.value.surname,this.walkinsForm.value.email,\r\n  this.walkinsForm.value.phone,this.walkinsForm.value.timeout,this.walkinsForm.value.timein,\r\n  this.walkinsForm.value.checkout,this.walkinsForm.value.checkin,this.category\r\n    ) \r\n\r\n}\r\n\r\nisValidInput(fieldName): boolean {\r\n  return this.walkinsForm.controls[fieldName].invalid &&\r\n    (this.walkinsForm.controls[fieldName].dirty || this.walkinsForm.controls[fieldName].touched);\r\n}\r\n\r\n async proccessWalkin() {\r\n    const loader = await this.loadingCtrl.create({\r\n      message: 'Booking your Space',\r\n      duration: 2000,\r\n    }).then((res) => {\r\n      res.present()\r\n      res.onDidDismiss().then(async (dis) => {\r\n        console.log('Loading dismissed after 2 seconds', dis)\r\n        // location.reload();\r\n        const alert = await this.alertCtrl.create({\r\n          message: `Space Successfully Booked, Click okay to close.`,\r\n          buttons: [\r\n            {\r\n              text: 'Okay',\r\n              handler: () => {\r\n                // this.walkinsForm.reset();\r\n                this.router.navigateByUrl('/view-walkins');\r\n              }\r\n            }\r\n          ]\r\n\r\n        });\r\n        return await alert.present();\r\n      })\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n"]}