(function () {
  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

  (window["webpackJsonp"] = window["webpackJsonp"] || []).push([["default~pages-add-space-add-space-module~pages-homepages-view-space-view-space-module~pages-homepage~2c6a9d01"], {
    /***/
    "./src/app/services/owner.service.ts":
    /*!*******************************************!*\
      !*** ./src/app/services/owner.service.ts ***!
      \*******************************************/

    /*! exports provided: OwnerServiceService */

    /***/
    function srcAppServicesOwnerServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "OwnerServiceService", function () {
        return OwnerServiceService;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "./node_modules/tslib/tslib.es6.js");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var firebase_app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! firebase/app */
      "./node_modules/firebase/app/dist/index.esm.js");
      /* harmony import */


      var firebase_auth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! firebase/auth */
      "./node_modules/firebase/auth/dist/index.esm.js");
      /* harmony import */


      var firebase_database__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! firebase/database */
      "./node_modules/firebase/database/dist/index.esm.js");
      /* harmony import */


      var firebase_firestore__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! firebase/firestore */
      "./node_modules/firebase/firestore/dist/index.esm.js");
      /* harmony import */


      var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
      /*! @angular/router */
      "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");

      var OwnerServiceService = /*#__PURE__*/function () {
        function OwnerServiceService(router) {
          _classCallCheck(this, OwnerServiceService);

          this.router = router;
          this.db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
          this.array = [];
          this.auth = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].auth();
          this.arr = [];
          this.resArr = new Array();
          this.resProfArray = new Array();
        }

        _createClass(OwnerServiceService, [{
          key: "signAuth",
          value: function signAuth() {
            var _this = this;

            return firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].auth().onAuthStateChanged(function (user) {
              if (user) {
                var uid = user.uid; //  this.setSession(users);

                _this.setuid(uid);

                console.log('user logged in: ', user);
              } else {
                console.log('user logged out');
              }
            });
          }
        }, {
          key: "setuid",
          value: function setuid(a) {
            this.UID = a;
          }
        }, {
          key: "getUid",
          value: function getUid() {
            return this.UID;
          }
        }, {
          key: "reserve",
          value: function reserve() {
            return firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore().collection('CoWorking-Space');
          } //   gallery() {
          //   return firebase.firestore().doc('space');
          // }

        }, {
          key: "updateProfile",
          value: function updateProfile(user_uid, uid, company_tel, company_address, company_website, social_media, company_emaile, company_name, img_profile, outside_features, aboutus) {
            var db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
            var hotelsRef = db.collection("profiles").doc(uid);
            var hotel = Promise.all([hotelsRef.collection("profile").doc(user_uid).set({
              company_address: company_address,
              company_tel: company_tel,
              company_website: company_website,
              social_media: social_media,
              company_emaile: company_emaile,
              company_name: company_name,
              uid: uid,
              user_uid: user_uid,
              img_profile: img_profile,
              outside_features: outside_features,
              aboutus: aboutus
            }, {
              merge: true
            }).then(function (a) {
              console.log("Changed");
            })]);
          }
        }, {
          key: "editProfile",
          value: function editProfile(user_uid, uid, company_tel, company_address, company_website, company_emaile, company_name, outside_features, aboutus) {
            var db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
            var hotelsRef = db.collection("profiles");
            hotelsRef.doc(uid).collection("profile").doc(user_uid).set({
              company_address: company_address,
              company_tel: company_tel,
              company_website: company_website,
              company_emaile: company_emaile,
              company_name: company_name,
              uid: uid,
              user_uid: user_uid,
              outside_features: outside_features,
              aboutus: aboutus
            }, {
              merge: true
            });
          }
        }, {
          key: "changeImg",
          value: function changeImg(user_uid, uid, img_profile) {
            var db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
            var hotelsRef = db.collection("profiles");
            hotelsRef.doc(uid).collection("profile").doc(user_uid).set({
              uid: uid,
              user_uid: user_uid,
              img_profile: img_profile
            }, {
              merge: true
            });
          }
        }, {
          key: "changeImgSpace",
          value: function changeImgSpace(user_uid, profile_uid, image, cate_uid) {
            var db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
            var hotelsRef = db.collection("profiles");
            hotelsRef.doc(user_uid).collection("profile").doc(profile_uid).collection("space").doc(cate_uid).update({
              image: image
            });
          }
        }, {
          key: "extrasAmenities",
          value: function extrasAmenities(user_uid, profile_uid, extras, cate_uid) {
            var db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
            var hotelsRef = db.collection("profiles");
            hotelsRef.doc(user_uid).collection("profile").doc(profile_uid).collection("space").doc(cate_uid).set({
              extraAmenities: extras
            }, {
              merge: true
            });
          }
        }, {
          key: "geoCodeLocation",
          value: function geoCodeLocation(user_uid, profile_uid, cate_uid, lat, log) {
            var db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
            var hotelsRef = db.collection("profiles");
            hotelsRef.doc(user_uid).collection("profile").doc(profile_uid).collection("space").doc(cate_uid).set({
              lat: lat,
              lng: log
            }, {
              merge: true
            });
          } // console.log( this.addCoSpaceForm.value.categories+" "+
          // this.addCoSpaceForm.value.category_number
          // +" "+this.addCoSpaceForm.value.address
          // +" "+this.addCoSpaceForm.value.city
          // +" "+this.addCoSpaceForm.value.province)

        }, {
          key: "addcoworkingSpace",
          value: function addcoworkingSpace(profiles_uid, profile_uid, categories, category_number, address, city, province, amenities, image, price, description) {
            var db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
            var hotelsRef = db.collection("profiles").doc(profiles_uid);
            var hotel = Promise.all([hotelsRef.collection("profile").doc(profile_uid).collection("space").add({
              uid: profiles_uid,
              workspace_uid: profile_uid,
              categories: categories,
              category_number: category_number,
              address: address,
              city: city,
              province: province,
              amenities: amenities,
              image: image,
              price: price,
              description: description
            }).then(function (a) {
              console.log("Changed");
            })]);
          }
        }, {
          key: "addGallary",
          value: function addGallary(profiles_uid, profile_uid, spaceuid, image, gallaryid) {
            var db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
            var hotelsRef = db.collection("profiles").doc(profiles_uid);
            var hotel = Promise.all([hotelsRef.collection("profile").doc(profile_uid).collection("space").doc(spaceuid).collection("gallary").doc(gallaryid).set({
              uid: profiles_uid,
              workspace_uid: profile_uid,
              spaceuid: spaceuid,
              image: image
            }).then(function (a) {
              console.log("Changed");
            })]);
          }
        }, {
          key: "walkinBooking",
          value: function walkinBooking(profiles_uid, profile_uid, spaceuid, name, surname, email, phone, timeout, timein, checkout, checkin, category) {
            var db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
            var hotelsRef = db.collection("profiles").doc(profiles_uid);
            var hotel = Promise.all([hotelsRef.collection("profile").doc(profile_uid).collection("space").doc(spaceuid).collection("walkins").add({
              name: name,
              surname: surname,
              email: email,
              phone: phone,
              timeout: timeout,
              timein: timein,
              checkout: checkout,
              checkin: checkin,
              spaceuid: spaceuid,
              category: category,
              date: new Date()
            }).then(function (a) {
              console.log("Changed");
            })]);
          }
        }, {
          key: "updateCoworkingSpace",
          value: function updateCoworkingSpace(profiles_uid, profile_uid, cate_uid, categories, category_number, address, price, city, province, amenities, description) {
            var db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
            var hotelsRef = db.collection("profiles").doc(profiles_uid);
            var hotel = Promise.all([hotelsRef.collection("profile").doc(profile_uid).collection("space").doc(cate_uid).update({
              uid: profiles_uid,
              workspace_uid: profile_uid,
              categories: categories,
              category_number: category_number,
              address: address,
              city: city,
              province: province,
              amenities: amenities,
              price: price,
              description: description
            }).then(function (a) {
              console.log("Changed");
            })]);
          }
        }, {
          key: "deleteSpace",
          value: function deleteSpace(profiles_uid, profile_uid, cate_uid) {
            var db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
            var hotelsRef = db.collection("profiles").doc(profiles_uid);
            var hotel = Promise.all([hotelsRef.collection("profile").doc(profile_uid).collection("space").doc(cate_uid)["delete"]().then(function (a) {
              console.log("Changed");
            })]);
          }
        }, {
          key: "reservation",
          value: function reservation(uid, name, surname, phone, checkin, checkout, timein, timeout, spaceBooked, usertype) {
            var citiesRef = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore().collection('profiles');
            var hotel = Promise.all([citiesRef.doc("8j3w4lEbm3OBxgQYVNGQmN1YU292").collection("bookings").add({
              name: name,
              surname: surname,
              phone: phone,
              checkin: checkin,
              checkout: checkout,
              timein: timein,
              timeout: timeout,
              spaceBooked: spaceBooked,
              usertype: usertype,
              date: new Date()
            }).then(function (res) {})]);
          }
        }, {
          key: "readOrNot",
          value: function readOrNot(profiles_uid, profile_uid, space_uid, reserv_uid, read) {
            var db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
            var hotelsRef = db.collection("profiles").doc(profiles_uid);
            var hotel = Promise.all([hotelsRef.collection("profile").doc(profile_uid).collection("space").doc(space_uid).collection("reservation").doc(reserv_uid).set({
              read: true
            }, {
              merge: true
            }).then(function (a) {
              console.log("Changed");
            })]);
          } ///////////////////////////////////////////////////////////////////
          //////////////////////////Get Workspace Uid///////////////////////

        }, {
          key: "setWorkSpaceUID",
          value: function setWorkSpaceUID(uid) {
            this.workspace_uid = uid;
          }
        }, {
          key: "getWorkSpaceUID",
          value: function getWorkSpaceUID() {
            return this.workspace_uid;
          }
        }]);

        return OwnerServiceService;
      }();

      OwnerServiceService.ctorParameters = function () {
        return [{
          type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["Router"]
        }];
      };

      OwnerServiceService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
      })], OwnerServiceService);
      /***/
    },

    /***/
    "./src/app/sign-in-sign-up.service.ts":
    /*!********************************************!*\
      !*** ./src/app/sign-in-sign-up.service.ts ***!
      \********************************************/

    /*! exports provided: SignInSignUpService */

    /***/
    function srcAppSignInSignUpServiceTs(module, __webpack_exports__, __webpack_require__) {
      "use strict";

      __webpack_require__.r(__webpack_exports__);
      /* harmony export (binding) */


      __webpack_require__.d(__webpack_exports__, "SignInSignUpService", function () {
        return SignInSignUpService;
      });
      /* harmony import */


      var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! tslib */
      "./node_modules/tslib/tslib.es6.js");
      /* harmony import */


      var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @angular/core */
      "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
      /* harmony import */


      var firebase_app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
      /*! firebase/app */
      "./node_modules/firebase/app/dist/index.esm.js");
      /* harmony import */


      var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
      /*! @angular/router */
      "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
      /* harmony import */


      var firebase_firestore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
      /*! firebase/firestore */
      "./node_modules/firebase/firestore/dist/index.esm.js");
      /* harmony import */


      var firebase_auth__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
      /*! firebase/auth */
      "./node_modules/firebase/auth/dist/index.esm.js");

      var SignInSignUpService = /*#__PURE__*/function () {
        function SignInSignUpService(router, route) {
          _classCallCheck(this, SignInSignUpService);

          this.router = router;
          this.route = route;
          this.db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
        } // async createAccount(email, password) {
        //   firebase.auth().createUserWithEmailAndPassword(email, password).then(results => {
        //     console.log(results);
        //   }).catch((error) => {
        //     console.log(error.message);
        //   })
        // }


        _createClass(SignInSignUpService, [{
          key: "signAuth",
          value: function signAuth() {
            var _this2 = this;

            return firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].auth().onAuthStateChanged(function (user) {
              if (user) {
                var uid = user.uid; //  this.setSession(email);

                _this2.setuid(uid);

                console.log('user logged in: ', user);
              } else {
                console.log('user logged out');
              }
            });
          }
        }, {
          key: "setuid",
          value: function setuid(a) {
            this.uid = a;
          }
        }, {
          key: "getUid",
          value: function getUid() {
            return this.uid;
          }
        }, {
          key: "Signup",
          value: function Signup(email, password) {
            return firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].auth().createUserWithEmailAndPassword(email, password);
          }
        }, {
          key: "SignIn",
          value: function SignIn(email, password) {
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
              var _this3 = this;

              return regeneratorRuntime.wrap(function _callee$(_context) {
                while (1) {
                  switch (_context.prev = _context.next) {
                    case 0:
                      firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].auth().signInWithEmailAndPassword(email, password).then(function (results) {
                        console.log(results);
                        var user = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].auth().currentUser;
                        var email, uid;

                        if (user != null) {
                          email = user.email;
                          uid = user.uid;

                          _this3.userSession(uid);

                          _this3.checkExistance(_this3.getUserSession());

                          console.log("details: " + email + ' ' + _this3.getUserSession());
                        } // this.router.navigateByUrl('booking-list');

                      })["catch"](function (error) {
                        console.log(error.message);
                      });

                    case 1:
                    case "end":
                      return _context.stop();
                  }
                }
              }, _callee);
            }));
          }
        }, {
          key: "userSession",
          value: function userSession(uidOwner) {
            this.uidOwner = uidOwner;
          }
        }, {
          key: "userEmail",
          value: function userEmail(emailOwner) {
            this.emailOwner = emailOwner;
          }
        }, {
          key: "getUserSession",
          value: function getUserSession() {
            return this.uidOwner;
          }
        }, {
          key: "logOut",
          value: function logOut() {
            this.uidOwner = null;
            return this.uidOwner;
          }
        }, {
          key: "getEmail",
          value: function getEmail() {
            return this.emailOwner;
          }
        }, {
          key: "userGroup",
          value: function userGroup(uid, usergroup, email) {
            var db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
            var userGroupCollecion = db.collection("profiles");
            var query = Promise.all([userGroupCollecion.doc(uid).collection('profile').doc().set({
              company_name: "company name",
              // company_emaile: email,
              company_tel: "company telephone",
              company_website: "www.webste.com",
              social_media: "social media links",
              company_address: "address",
              usergroup: usergroup,
              uid: uid,
              date: new Date()
            })]);
          }
        }, {
          key: "checkExistance",
          value: function checkExistance(uid) {
            var _this4 = this;

            this.db.collectionGroup("profile").where("uid", "==", uid) // .where("publishedAt", "<=", new Date("2018-12-31 23:59"))
            .get().then(function (snap) {
              snap.forEach(function (doc) {
                if (!doc.exists) {
                  console.log("No such user in the profiles Document!");
                }

                if (doc.exists) {
                  // if (doc.data().usergroup == 'user') {
                  //   this.status = true;            
                  //  // console.log("Document data:", doc.data());
                  //  console.log("user welcome");
                  //   // this.router.navigateByUrl('profile');
                  // } else
                  if (doc.data().usergroup == 'owner') {
                    console.log("Owner");
                    _this4.status = true;
                    console.log("Document data:", doc.data());

                    _this4.router.navigateByUrl('owner-landing');
                  }
                }
              }); // if (this.status != true){
              //   // console.log(this.status)
              //   console.log("Create profile please")
              //   this.router.navigateByUrl('/user-group');
              // }
            });
          }
        }, {
          key: "setStatus",
          value: function setStatus(x) {
            this.status = x;
          }
        }, {
          key: "returnStatus",
          value: function returnStatus() {
            return this.status;
          }
        }]);

        return SignInSignUpService;
      }();

      SignInSignUpService.ctorParameters = function () {
        return [{
          type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]
        }, {
          type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"]
        }];
      };

      SignInSignUpService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
      })], SignInSignUpService);
      /***/
    }
  }]);
})();
//# sourceMappingURL=default~pages-add-space-add-space-module~pages-homepages-view-space-view-space-module~pages-homepage~2c6a9d01-es5.js.map