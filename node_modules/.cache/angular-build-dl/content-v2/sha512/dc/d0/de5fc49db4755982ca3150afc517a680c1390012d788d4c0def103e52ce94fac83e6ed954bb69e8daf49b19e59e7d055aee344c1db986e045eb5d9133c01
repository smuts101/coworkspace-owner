{"version":3,"sources":["webpack:///src/app/tab1/tab1.page.html","webpack:///src/app/tab1/tab1.module.ts","webpack:///src/app/tab1/tab1.page.scss","webpack:///src/app/tab1/tab1.page.ts"],"names":["Tab1PageModule","imports","forChild","path","component","declarations","Geolocation","Tab1Page","nativeGeocoder","getCurrentPosition","coordinates","console","log","coords","options","useLocale","maxResults","reverseGeocode","latitude","longitude","then","result","address","error","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCgBFA,cAAc;AAAA;AAAA,O;;AAAdA,oBAAc,6DAT1B,+DAAS;AACRC,eAAO,EAAE,CACP,0DADO,EAEP,4DAFO,EAGP,0DAHO,EAIP,6DAAaC,QAAb,CAAsB,CAAC;AAAEC,cAAI,EAAE,EAAR;AAAYC,mBAAS,EAAE;AAAvB,SAAD,CAAtB,CAJO,CADD;AAORC,oBAAY,EAAE,CAAC,mDAAD;AAPN,OAAT,CAS0B,GAAdL,cAAc,CAAd;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCEPM,W,GAAgB,uD,CAAhBA,W;;UAOKC,QAAQ;AAGnB,0BAAoBC,cAApB,EAAoD;AAAA;;AAAhC,eAAAA,cAAA,GAAAA,cAAA;AAAmC;;AAHpC;AAAA;AAAA,mCAIJ;;;;;;;;AACO,6BAAMF,WAAW,CAACG,kBAAZ,EAAN;;;AAAdC,iC;AACNC,6BAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,WAAvB;AACA,2BAAKG,MAAL,GAAcH,WAAW,CAACG,MAA1B;;;;;;;;;AACD;AARkB;AAAA;AAAA,2CASI;;;;;;;;;0BAChB,KAAKA,M;;;;;;AACY,6BAAMP,WAAW,CAACG,kBAAZ,EAAN;;;AAAdC,iC;AACN,2BAAKG,MAAL,GAAcH,WAAW,CAACG,MAA1B;;;AAEEC,6B,GAAiC;AACnCC,iCAAS,EAAE,IADwB;AAEnCC,kCAAU,EAAE;AAFuB,uB;AAIrC,2BAAKR,cAAL,CAAoBS,cAApB,CAAmC,KAAKJ,MAAL,CAAYK,QAA/C,EAAyD,KAAKL,MAAL,CAAYM,SAArE,EAAgFL,OAAhF,EACGM,IADH,CACQ,UAACC,MAAD,EAAoC;AACxCV,+BAAO,CAACC,GAAR,CAAYS,MAAZ;AACA,6BAAI,CAACC,OAAL,GAAeD,MAAM,CAAC,CAAD,CAArB;AACD,uBAJH,WAKS,UAACE,KAAD;AAAA,+BAAgBZ,OAAO,CAACC,GAAR,CAAYW,KAAZ,CAAhB;AAAA,uBALT;;;;;;;;;AAMD;AAxBkB;;AAAA;AAAA,S;;;;gBANZ;;;;AAMIhB,cAAQ,6DALpB,gEAAU;AACTiB,gBAAQ,EAAE,UADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,0FAFS;;;;AAAA,OAAV,CAKoB,GAARlB,QAAQ,CAAR","file":"tab1-tab1-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>\\r\\n      Geolocation\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-card class=\\\"welcome-card\\\">\\r\\n\\r\\n    <ion-card-header>\\r\\n      <ion-card-subtitle>Get coordinates</ion-card-subtitle>\\r\\n      <ion-card-title>Geolocation</ion-card-title>\\r\\n    </ion-card-header>\\r\\n    <ion-card-content>\\r\\n      <p>Click to get your device's location in Latitude and Longitude. Allow the app the required permissions once\\r\\n        asked.</p>\\r\\n      <ion-row *ngIf=\\\"coords && coords.latitude\\\">\\r\\n        <ion-text class=\\\"coords\\\">My Latitude : {{coords.latitude}}</ion-text>\\r\\n      </ion-row>\\r\\n      <ion-row *ngIf=\\\"coords && coords.longitude\\\">\\r\\n        <ion-text class=\\\"coords\\\">My Longitude : {{coords.longitude}}</ion-text>\\r\\n      </ion-row>\\r\\n      <ion-button (click)=\\\"locate()\\\" expand=\\\"full\\\">Locate Me</ion-button>\\r\\n\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n  <ion-card class=\\\"welcome-card\\\">\\r\\n\\r\\n    <ion-card-header>\\r\\n      <ion-card-subtitle>Get Address</ion-card-subtitle>\\r\\n      <ion-card-title>Reverse Geocoding</ion-card-title>\\r\\n    </ion-card-header>\\r\\n    <ion-card-content>\\r\\n      <p>Convert your current location into address</p>\\r\\n      <ion-row *ngIf=\\\"address\\\">\\r\\n        <ion-text class=\\\"coords\\\">My Address : {{address.subLocality ? address.subLocality +', ' : ''}}\\r\\n          {{address.locality ? address.locality +', ' : ''}}{{address.administrativeArea ? address.administrativeArea +', ' : ''}}\\r\\n          {{address.postalCode ? address.postalCode +', ' : ''}}{{address.countryName ? address.countryName : ''}}\\r\\n        </ion-text>\\r\\n      </ion-row>\\r\\n      <ion-button (click)=\\\"reverseGeocode()\\\" expand=\\\"full\\\">Get My Address</ion-button>\\r\\n\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n\\r\\n</ion-content>\";","import { IonicModule } from '@ionic/angular';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Tab1Page } from './tab1.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild([{ path: '', component: Tab1Page }])\r\n  ],\r\n  declarations: [Tab1Page]\r\n})\r\nexport class Tab1PageModule {}\r\n","export default \".welcome-card img {\\n  max-height: 35vh;\\n  overflow: hidden;\\n}\\n\\n.coords {\\n  padding: 5px;\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFiMS90YWIxLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFBO0VBQ0EsZ0JBQUE7QUFDRjs7QUFDQTtFQUNFLFlBQUE7RUFDQSxpQkFBQTtBQUVGIiwiZmlsZSI6InNyYy9hcHAvdGFiMS90YWIxLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi53ZWxjb21lLWNhcmQgaW1nIHtcclxuICBtYXgtaGVpZ2h0OiAzNXZoO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuLmNvb3JkcyB7XHJcbiAgcGFkZGluZzogNXB4O1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcbiJdfQ== */\";","import { Component } from '@angular/core';\r\nimport { Plugins } from '@capacitor/core';\r\nconst { Geolocation } = Plugins;\r\nimport { NativeGeocoder, NativeGeocoderResult, NativeGeocoderOptions } from '@ionic-native/native-geocoder/ngx';\r\n@Component({\r\n  selector: 'app-tab1',\r\n  templateUrl: 'tab1.page.html',\r\n  styleUrls: ['tab1.page.scss']\r\n})\r\nexport class Tab1Page {\r\n  coords: any;\r\n  address: any;\r\n  constructor(private nativeGeocoder: NativeGeocoder) { }\r\n  async locate() {\r\n    const coordinates = await Geolocation.getCurrentPosition();\r\n    console.log('Current', coordinates);\r\n    this.coords = coordinates.coords;\r\n  }\r\n  async reverseGeocode() {\r\n    if (!this.coords) {\r\n      const coordinates = await Geolocation.getCurrentPosition();\r\n      this.coords = coordinates.coords;\r\n    }\r\n    let options: NativeGeocoderOptions = {\r\n      useLocale: true,\r\n      maxResults: 5\r\n    };\r\n    this.nativeGeocoder.reverseGeocode(this.coords.latitude, this.coords.longitude, options)\r\n      .then((result: NativeGeocoderResult[]) => {\r\n        console.log(result);\r\n        this.address = result[0];\r\n      })\r\n      .catch((error: any) => console.log(error));\r\n  }\r\n}\r\n"]}