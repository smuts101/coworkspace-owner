(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["default~pages-add-space-add-space-module~pages-homepages-view-space-view-space-module~pages-homepage~8ad2e55a"],{

/***/ "./src/app/services/owner.service.ts":
/*!*******************************************!*\
  !*** ./src/app/services/owner.service.ts ***!
  \*******************************************/
/*! exports provided: OwnerServiceService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OwnerServiceService", function() { return OwnerServiceService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/app */ "./node_modules/firebase/app/dist/index.esm.js");
/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/auth */ "./node_modules/firebase/auth/dist/index.esm.js");
/* harmony import */ var firebase_database__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! firebase/database */ "./node_modules/firebase/database/dist/index.esm.js");
/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! firebase/firestore */ "./node_modules/firebase/firestore/dist/index.esm.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ionic/angular */ "./node_modules/@ionic/angular/__ivy_ngcc__/fesm2015/ionic-angular.js");








let OwnerServiceService = class OwnerServiceService {
    constructor(router, loadingCtrl, alertCtrl) {
        this.router = router;
        this.loadingCtrl = loadingCtrl;
        this.alertCtrl = alertCtrl;
        this.db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
        this.array = [];
        this.auth = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].auth();
        this.arr = [];
        this.resArr = new Array();
        this.resProfArray = new Array();
    }
    signAuth() {
        return firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].auth().onAuthStateChanged(user => {
            if (user) {
                const uid = user.uid;
                //  this.setSession(users);
                this.setuid(uid);
                console.log('user logged in: ', user);
            }
            else {
                console.log('user logged out');
            }
        });
    }
    setuid(a) {
        this.UID = a;
    }
    getUid() {
        return this.UID;
    }
    reserve() {
        return firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore().collection('CoWorking-Space');
    }
    //   gallery() {
    //   return firebase.firestore().doc('space');
    // }
    updateProfile(user_uid, uid, company_tel, company_address, company_website, social_media, company_emaile, company_name, img_profile, outside_features, aboutus) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            // const loading = await this.loadingCtrl.create();
            this.uploadSpaceSuccess();
            var db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
            var hotelsRef = db.collection("profiles").doc(uid);
            var hotel = Promise.all([
                hotelsRef.collection("profile").doc(user_uid)
                    .set({
                    company_address: company_address,
                    company_tel: company_tel,
                    company_website: company_website,
                    social_media: social_media,
                    company_emaile: company_emaile,
                    company_name: company_name,
                    uid: uid,
                    user_uid: user_uid,
                    img_profile: img_profile,
                    outside_features: outside_features,
                    aboutus: aboutus
                }, { merge: true })
            ]).catch((error) => {
                this._error = error.message;
                console.log(this._error);
                this.updateSpaceError();
                // this.router.navigateByUrl('/add-space');
            });
            // return await loading.present();
        });
    }
    editProfile(user_uid, uid, company_tel, company_address, company_website, company_emaile, company_name, outside_features, aboutus) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const loading = yield this.loadingCtrl.create();
            var db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
            var hotelsRef = db.collection("profiles");
            hotelsRef.doc(uid).collection("profile").doc(user_uid)
                .set({
                company_address: company_address,
                company_tel: company_tel,
                company_website: company_website,
                company_emaile: company_emaile,
                company_name: company_name,
                uid: uid,
                user_uid: user_uid,
                outside_features: outside_features,
                aboutus: aboutus
            }, { merge: true }).then(a => {
                loading.dismiss().then(() => {
                    console.log("Changed");
                    this.router.navigateByUrl('/profile');
                });
                console.log("Changed");
            }), error => {
                loading.dismiss().then(() => {
                    console.log(error.message);
                    // this.addSpaceerror();
                });
            };
            return yield loading.present();
        });
    }
    changeImg(user_uid, uid, img_profile) {
        this.uploadProfilepicSuccess();
        var db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
        var hotelsRef = db.collection("profiles");
        hotelsRef.doc(uid).collection("profile").doc(user_uid)
            .set({
            uid: uid,
            user_uid: user_uid,
            img_profile: img_profile
        }, { merge: true });
    }
    changeImgSpace(user_uid, profile_uid, image, cate_uid) {
        this.uploadSpacepicSuccess();
        var db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
        var hotelsRef = db.collection("profiles");
        hotelsRef.doc(user_uid).collection("profile").doc(profile_uid).collection("space").doc(cate_uid)
            .update({
            image: image
        });
    }
    extrasAmenities(user_uid, profile_uid, extras, cate_uid) {
        var db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
        var hotelsRef = db.collection("profiles");
        hotelsRef.doc(user_uid).collection("profile").doc(profile_uid).collection("space").doc(cate_uid)
            .set({
            extraAmenities: extras
        }, { merge: true });
    }
    geoCodeLocation(user_uid, profile_uid, cate_uid, lat, log) {
        var db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
        var hotelsRef = db.collection("profiles");
        hotelsRef.doc(user_uid).collection("profile").doc(profile_uid).collection("space").doc(cate_uid)
            .set({
            lat: lat,
            lng: log
        }, { merge: true });
    }
    // console.log( this.addCoSpaceForm.value.categories+" "+
    // this.addCoSpaceForm.value.category_number
    // +" "+this.addCoSpaceForm.value.address
    // +" "+this.addCoSpaceForm.value.city
    // +" "+this.addCoSpaceForm.value.province)
    addcoworkingSpace(profiles_uid, profile_uid, categories, category_number, address, city, province, amenities, image, price, description) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            // const loading = await this.loadingCtrl.create();
            this.addSpace();
            var db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
            var hotelsRef = db.collection("profiles").doc(profiles_uid);
            var hotel = Promise.all([
                hotelsRef.collection("profile").doc(profile_uid).collection("space")
                    .add({
                    uid: profiles_uid,
                    workspace_uid: profile_uid,
                    categories: categories,
                    category_number: category_number,
                    address: address,
                    city: city,
                    province: province,
                    amenities: amenities,
                    image: image,
                    price: price,
                    description: description,
                }).catch((error) => {
                    this._error = error.message;
                    console.log(this._error);
                    this.addSpaceerror();
                    // this.router.navigateByUrl('/add-space');
                })
            ]);
            // return await loading.present();
        });
    }
    //  async addcoworkingSpace(profiles_uid,profile_uid,categories,category_number,address,city,province,amenities,image,price,description) {
    //   const loading = await this.loadingCtrl.create();
    //   this.accountService.SignIn(this.LoginForm.value.email, this.LoginForm.value.password).then((res) => {
    //     // this.accountService.checkVerification();
    //   }).then(() => {
    //     loading.dismiss().then(() => {
    //       // this.router.navigateByUrl('/update-space');
    //     });
    //   },
    //     error => {
    //       loading.dismiss().then(() => {
    //         // this.router.navigateByUrl('/signin')
    //         console.log(error);
    //       });
    //     }
    //   );
    //   return await loading.present();
    // }
    addGallary(profiles_uid, profile_uid, spaceuid, image, gallaryid) {
        this.uploadgallerySuccess();
        var db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
        var hotelsRef = db.collection("profiles").doc(profiles_uid);
        var hotel = Promise.all([
            hotelsRef.collection("profile").doc(profile_uid)
                .collection("space").doc(spaceuid)
                .collection("gallary").doc(gallaryid)
                .set({
                uid: profiles_uid,
                workspace_uid: profile_uid,
                spaceuid: spaceuid,
                image: image
            }).then(a => {
                console.log("Changed");
            })
        ]);
    }
    walkinBooking(profiles_uid, profile_uid, spaceuid, name, surname, email, phone, timeout, timein, checkout, checkin, category) {
        var db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
        var hotelsRef = db.collection("profiles").doc(profiles_uid);
        var hotel = Promise.all([
            hotelsRef.collection("profile").doc(profile_uid)
                .collection("space").doc(spaceuid)
                .collection("walkins")
                .add({
                name: name,
                surname: surname,
                email: email,
                phone: phone,
                timeout: timeout,
                timein: timein,
                checkout: checkout,
                checkin: checkin,
                spaceuid: spaceuid,
                category: category,
                date: new Date()
            }).then(a => {
                console.log("Changed");
                this.router.navigateByUrl('/view-walkins');
            })
        ]);
    }
    updateCoworkingSpace(profiles_uid, profile_uid, cate_uid, categories, category_number, address, price, city, province, amenities, description) {
        this.updateSpaceSuccess();
        var db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
        var hotelsRef = db.collection("profiles").doc(profiles_uid);
        var hotel = Promise.all([
            hotelsRef.collection("profile").doc(profile_uid).collection("space").doc(cate_uid)
                .update({
                uid: profiles_uid,
                workspace_uid: profile_uid,
                categories: categories,
                category_number: category_number,
                address: address,
                city: city,
                province: province,
                amenities: amenities,
                price: price,
                description: description
            }).then(a => {
                console.log("Changed");
            })
        ]);
    }
    deleteSpace(profiles_uid, profile_uid, cate_uid) {
        this.deleteSpaceSuccess();
        var db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
        var hotelsRef = db.collection("profiles").doc(profiles_uid);
        var hotel = Promise.all([
            hotelsRef.collection("profile").doc(profile_uid).collection("space").doc(cate_uid)
                .delete().then(a => {
                console.log("Changed");
            })
        ]);
    }
    reservation(uid, name, surname, phone, checkin, checkout, timein, timeout, spaceBooked, usertype) {
        var citiesRef = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore().collection('profiles');
        var hotel = Promise.all([
            citiesRef.doc("8j3w4lEbm3OBxgQYVNGQmN1YU292").collection("bookings").add({
                name: name,
                surname: surname,
                phone: phone,
                checkin: checkin,
                checkout: checkout,
                timein: timein,
                timeout: timeout,
                spaceBooked: spaceBooked,
                usertype: usertype,
                date: new Date()
            }).then((res) => {
            })
        ]);
    }
    readOrNot(profiles_uid, profile_uid, space_uid, reserv_uid, read) {
        var db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
        var hotelsRef = db.collection("profiles").doc(profiles_uid);
        var hotel = Promise.all([
            hotelsRef.collection("profile").doc(profile_uid)
                .collection("space").doc(space_uid)
                .collection("reservation").doc(reserv_uid)
                .set({
                read: true
            }, { merge: true }).then(a => {
                console.log("Changed");
            })
        ]);
    }
    ///////////////////////////////////////////////////////////////////
    //////////////////////////Get Workspace Uid///////////////////////
    setWorkSpaceUID(uid) {
        this.workspace_uid = uid;
    }
    getWorkSpaceUID() {
        return this.workspace_uid;
    }
    addSpacesuccess() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const alert = yield this.alertCtrl.create({
                header: 'Successful',
                message: 'Your space was added successfully, Click Okay to go Home',
                buttons: [
                    {
                        text: 'Okay',
                        handler: () => Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
                            this.router.navigateByUrl('/owner-landing');
                        })
                    },
                ]
            });
            yield alert.present();
        });
    }
    addSpace() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const loader = yield this.loadingCtrl.create({
                message: 'Uploading Space',
                duration: 2000,
            }).then((res) => {
                res.present();
                res.onDidDismiss().then((dis) => Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
                    console.log('Loading dismissed after 2 seconds', dis);
                    const alert = yield this.alertCtrl.create({
                        message: `Your space was added successfully, Click Okay to go Home`,
                        buttons: [
                            {
                                text: 'Ok',
                                handler: () => {
                                    this.router.navigateByUrl('/owner-landing');
                                }
                            }
                        ]
                    });
                    return yield alert.present();
                }));
            });
        });
    }
    addSpaceerror() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const alert = yield this.alertCtrl.create({
                header: 'Successful',
                message: 'Something went wrong while adding your space, Please try again.',
                buttons: [
                    {
                        text: 'Okay',
                        handler: () => Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
                            this.router.navigateByUrl('/add-space');
                        })
                    },
                ]
            });
            yield alert.present();
        });
    }
    uploadSpaceSuccess() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const loader = yield this.loadingCtrl.create({
                message: 'Updating profile',
                duration: 2000,
            }).then((res) => {
                res.present();
                res.onDidDismiss().then((dis) => Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
                    console.log('Loading dismissed after 2 seconds', dis);
                    const alert = yield this.alertCtrl.create({
                        message: `Your profile was updated successfully, Click Okay to view you profile`,
                        buttons: [
                            {
                                text: 'Ok',
                                handler: () => {
                                    this.router.navigateByUrl('/profile');
                                }
                            }
                        ]
                    });
                    return yield alert.present();
                }));
            });
        });
    }
    updateSpaceError() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const alert = yield this.alertCtrl.create({
                header: 'Successful',
                message: 'Your space was added successfully, Click Okay to go Home',
                buttons: [
                    {
                        text: 'Okay',
                        handler: () => Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
                            this.router.navigateByUrl('/owner-landing');
                        })
                    },
                ]
            });
            yield alert.present();
        });
    }
    uploadProfilepicSuccess() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const loader = yield this.loadingCtrl.create({
                message: 'Updating Profile picture',
                duration: 2000,
            }).then((res) => {
                res.present();
                res.onDidDismiss().then((dis) => Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
                    console.log('Loading dismissed after 2 seconds', dis);
                    const alert = yield this.alertCtrl.create({
                        message: `Your Profile picture was updated successfully, Click Okay to view you profile`,
                        buttons: [
                            {
                                text: 'Ok',
                                handler: () => {
                                    this.router.navigateByUrl('/profile');
                                }
                            }
                        ]
                    });
                    return yield alert.present();
                }));
            });
        });
    }
    uploadSpacepicSuccess() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const loader = yield this.loadingCtrl.create({
                message: 'Updating Space Profile pic',
                duration: 2000,
            }).then((res) => {
                res.present();
                res.onDidDismiss().then((dis) => Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
                    console.log('Loading dismissed after 2 seconds', dis);
                    const alert = yield this.alertCtrl.create({
                        message: `Your space profile picture was updated successfully, Click Okay to view you profile`,
                        buttons: [
                            {
                                text: 'Ok',
                                handler: () => {
                                    this.router.navigateByUrl('/add-space');
                                }
                            }
                        ]
                    });
                    return yield alert.present();
                }));
            });
        });
    }
    uploadgallerySuccess() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const loader = yield this.loadingCtrl.create({
                message: 'Creating Gallery',
                duration: 2000,
            }).then((res) => {
                res.present();
                res.onDidDismiss().then((dis) => Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
                    console.log('Loading dismissed after 2 seconds', dis);
                    const alert = yield this.alertCtrl.create({
                        message: `Your gallery picture was added successfully`,
                        buttons: [
                            {
                                text: 'Ok',
                                handler: () => {
                                    this.router.navigateByUrl('/add-space');
                                }
                            }
                        ]
                    });
                    return yield alert.present();
                }));
            });
        });
    }
    updateSpaceSuccess() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const loader = yield this.loadingCtrl.create({
                message: 'Updating Space',
                duration: 2000,
            }).then((res) => {
                res.present();
                res.onDidDismiss().then((dis) => Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
                    console.log('Loading dismissed after 2 seconds', dis);
                    const alert = yield this.alertCtrl.create({
                        message: `Your space was updated successfully`,
                        buttons: [
                            {
                                text: 'Ok',
                                handler: () => {
                                    this.router.navigateByUrl('/home');
                                }
                            }
                        ]
                    });
                    return yield alert.present();
                }));
            });
        });
    }
    deleteSpaceSuccess() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const loader = yield this.loadingCtrl.create({
                message: 'Deleting',
                duration: 2000,
            }).then((res) => {
                res.present();
                res.onDidDismiss().then((dis) => Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
                    console.log('Loading dismissed after 2 seconds', dis);
                    const alert = yield this.alertCtrl.create({
                        message: `Your space was deleted successfully`,
                        buttons: [
                            {
                                text: 'Ok',
                                handler: () => {
                                    this.router.navigateByUrl('/owner-landing');
                                }
                            }
                        ]
                    });
                    return yield alert.present();
                }));
            });
        });
    }
};
OwnerServiceService.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_6__["Router"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_7__["LoadingController"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_7__["AlertController"] }
];
OwnerServiceService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
], OwnerServiceService);



/***/ }),

/***/ "./src/app/sign-in-sign-up.service.ts":
/*!********************************************!*\
  !*** ./src/app/sign-in-sign-up.service.ts ***!
  \********************************************/
/*! exports provided: SignInSignUpService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SignInSignUpService", function() { return SignInSignUpService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/app */ "./node_modules/firebase/app/dist/index.esm.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! firebase/firestore */ "./node_modules/firebase/firestore/dist/index.esm.js");
/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! firebase/auth */ "./node_modules/firebase/auth/dist/index.esm.js");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ionic/angular */ "./node_modules/@ionic/angular/__ivy_ngcc__/fesm2015/ionic-angular.js");







let SignInSignUpService = class SignInSignUpService {
    constructor(router, route, alertCtrl, loadingCtrl) {
        this.router = router;
        this.route = route;
        this.alertCtrl = alertCtrl;
        this.loadingCtrl = loadingCtrl;
        this.db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
        this.onboardingStatus = false;
    }
    signAuth() {
        return firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].auth().onAuthStateChanged(user => {
            if (user) {
                const uid = user.uid;
                this.setuid(uid);
                console.log('user logged in: ', user);
            }
            else {
                console.log('user logged out');
            }
        });
    }
    setuid(a) {
        this.uid = a;
    }
    getUid() {
        return this.uid;
    }
    Signup(email, password) {
        return firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].auth().createUserWithEmailAndPassword(email, password).then(res => {
            var db = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore();
            var userGroupCollecion = db.collection("profiles");
            return userGroupCollecion.doc(res.user.uid).collection("profile").doc(res.user.uid).set({
                company_name: "company name",
                company_email: email,
                company_tel: "company telephone",
                company_website: "www.webste.com",
                social_media: "social media links",
                company_address: "address",
                usergroup: "owner",
                // onboardstatus: this.onboardingStatus,
                uid: res.user.uid,
                date: new Date()
            }).then(() => {
                console.log(res.user);
            }).catch(function (error) {
                this._error = error.message;
                this.showAlertErrorfb();
                console.log(error);
            });
        });
    }
    checkVerification() {
        return new Promise((resolve, reject) => {
            firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].auth().onAuthStateChanged((user) => {
                console.log(user);
                if (user.emailVerified == false) {
                    console.log('you did not verify your email');
                    this.showAlertEmailVerification();
                    // this.router.navigateByUrl('/signin');
                    resolve(0);
                }
                else {
                    //  this.router.navigateByUrl('/owner-landing');
                    resolve(1);
                }
            });
        });
    }
    SignIn(email, password) {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].auth().signInWithEmailAndPassword(email, password).then(results => {
                console.log(results);
                var user = firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].auth().currentUser;
                var email, uid;
                if (user != null) {
                    email = user.email;
                    uid = user.uid;
                    this.userSession(uid);
                    this.checkExistance(this.getUserSession());
                    this.loginSucessful();
                    console.log("details: " + email + ' ' + this.getUserSession());
                }
            }).catch((error) => {
                this._error = error.message;
                this.showAlertErrorfb();
                this.router.navigateByUrl('/signin');
                console.log(this._error);
            });
        });
    }
    userSession(uidOwner) {
        this.uidOwner = uidOwner;
    }
    userEmail(emailOwner) {
        this.emailOwner = emailOwner;
    }
    getUserSession() {
        return this.uidOwner;
    }
    logOut() {
        this.uidOwner = null;
        return this.uidOwner;
    }
    getEmail() {
        return this.emailOwner;
    }
    checkExistance(uid) {
        this.db.collectionGroup("profile")
            .where("uid", "==", (uid))
            .get()
            .then(snap => {
            snap.forEach(doc => {
                if (!doc.exists) {
                    console.log("No such user in the profiles Document!");
                }
                if (doc.exists)
                    if (doc.data().usergroup == 'owner') {
                        console.log("Owner");
                        this.status = true;
                        console.log("Document data:", doc.data());
                        console.log("Yeess! looks like you have a business account profile with us");
                        this.checkVerification();
                        // this.router.navigateByUrl('/owner-landing');
                    }
                    else {
                        console.log("User");
                        this.status = false;
                    }
            });
            if (this.status != true) {
                console.log("User");
                console.log("Oops! looks like you don't have a business account profile with us");
                this.showAlertError();
                // this.router.navigateByUrl('/signup'); 
            }
        });
    }
    reserve() {
        return firebase_app__WEBPACK_IMPORTED_MODULE_2__["default"].firestore().collection('profiles');
    }
    setStatus(x) {
        this.status = x;
    }
    returnStatus() {
        return this.status;
    }
    preventCrossLogin() {
    }
    showAlertError() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const alert = yield this.alertCtrl.create({
                // header: 'Alert!', 
                message: 'Oops! looks like you do not have a business account profile with us, Click Okay to Create one.',
                buttons: [
                    {
                        text: 'Okay',
                        handler: () => Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
                            this.router.navigateByUrl('/signup');
                        })
                    },
                ]
            });
            yield alert.present();
        });
    }
    showAlertErrorfb() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const alert = yield this.alertCtrl.create({
                header: 'Alert',
                // subHeader: 'Sign in error!',
                message: this._error,
                buttons: [
                    {
                        text: 'Okay',
                        handler: () => Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
                            this.router.navigateByUrl('/signin');
                        })
                    },
                ]
            });
            yield alert.present();
        });
    }
    showAlertEmailVerification() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const alert = yield this.alertCtrl.create({
                header: 'Alert!',
                message: 'It looks like you did not veirfy your Email, please do so before you can signin',
                buttons: [
                    {
                        text: 'Okay',
                        handler: () => Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
                            this.router.navigateByUrl('/sign-in');
                        })
                    },
                ]
            });
            yield alert.present();
        });
    }
    loginSucessful() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            const alert = yield this.alertCtrl.create({
                header: 'Alert!',
                message: 'Login Successful!, Click okay to Complete your Profile, ignore msg if you already did',
                buttons: [
                    {
                        text: 'Okay',
                        handler: () => Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
                            this.router.navigateByUrl('/profile-add');
                        })
                    },
                    {
                        text: 'Ignore',
                        handler: () => Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
                            this.router.navigateByUrl('/owner-landing');
                        })
                    },
                ]
            });
            yield alert.present();
        });
    }
};
SignInSignUpService.ctorParameters = () => [
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_6__["AlertController"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_6__["LoadingController"] }
];
SignInSignUpService = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    })
], SignInSignUpService);



/***/ })

}]);
//# sourceMappingURL=default~pages-add-space-add-space-module~pages-homepages-view-space-view-space-module~pages-homepage~8ad2e55a-es2015.js.map