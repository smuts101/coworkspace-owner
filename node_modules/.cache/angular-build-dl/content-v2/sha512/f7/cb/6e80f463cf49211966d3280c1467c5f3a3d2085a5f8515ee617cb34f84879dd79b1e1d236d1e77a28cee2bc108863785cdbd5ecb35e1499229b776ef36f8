{"version":3,"sources":["webpack:///src/app/pages/update-space/update-space.page.html","webpack:///src/app/pages/update-space/update-space-routing.module.ts","webpack:///src/app/pages/update-space/update-space.module.ts","webpack:///src/app/pages/update-space/update-space.page.scss","webpack:///src/app/pages/update-space/update-space.page.ts"],"names":["routes","path","component","UpdateSpacePageRoutingModule","imports","forChild","exports","UpdateSpacePageModule","declarations","Geolocation","Toast","UpdateSpacePage","loader","nativeGeocoder","ngZone","popover","route","ownerservice","account","extras","extrasArray","arrayList","arrayEdit","category","snapshot","params","amenities_","amenitiesEdit","cartoonsData","id","name","GallaryStatusValue","gallaryArray","gallaryArraySize","extrasCart","showingCurrent","imageList","dummyList","firestore","collection","doc","getUserSession","getWorkSpaceUID","where","get","then","forEach","dat","push","Object","assign","data","workspaceuid","checkGallary","console","log","isChecked","fileInput","imageError","target","files","max_size","allowed_types","max_height","max_width","size","includes","type","reader","FileReader","onload","e","image","Image","src","result","rs","img_height","currentTarget","img_width","imgBase64Path","cardImageBase64","isImageSaved","readAsDataURL","showFormvalue","spaceUid","description_","description","address_","address","category_number_","category_number","price_","price","province_","province","amenities","categories_","categories","city_","city","spaceid","updateCoworkingSpace","CreatePopover","deleteSpace","changeImgSpace","extrasx","anemenity","enemity","length","extrasAmenities","x","addGallary","gallaryuid","gallary","img","valueuid","db","hotelsRef","spaceuid","res","create","showBackdrop","popoverElement","present","geoCodeLocation","addressLocation","options","useLocale","maxResults","forwardGeocode","run","lat","parseFloat","latitude","lng","longitude","error","show","text","event","setTimeout","Array","complete","message","duration","onDidDismiss","dis","selector","template"],"mappings":"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","file":"pages-update-space-update-space-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>update-space</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <ion-refresher slot =\\\"fixed\\\" disabled=\\\"false\\\" (ionRefresh)=\\\"doRefresh($event)\\\" pullFactor=\\\"0.5\\\" pullMin=\\\"100\\\" pullMax=\\\"200\\\">  \\n    <ion-refresher-content  \\n    pullingIcon=\\\"arrow-down\\\"  \\n    pullingText=\\\"Pull to refresh\\\"  \\n    refreshingSpinner=\\\"bubbles\\\"  \\n    refreshingText=\\\"Refreshing.....\\\"></ion-refresher-content>   \\n  </ion-refresher>  \\n \\n\\n  <ion-grid>\\n    <ion-row>\\n  <ion-item  *ngFor=\\\"let x of arrayList\\\">\\n    <ion-avatar slot=\\\"start\\\">\\n      <img [src]=\\\"x.image\\\">\\n    </ion-avatar>\\n    <ion-label>\\n     <ion-grid>\\n       <ion-row>\\n        {{x.categories}}\\n       </ion-row>\\n       <ion-row>\\n        {{x.price}}\\n       </ion-row>\\n       <ion-row>\\n        {{x.address}}\\n       </ion-row>\\n       <ion-row>\\n        {{x.description}}\\n       </ion-row>\\n       <ion-row>\\n         <ion-col *ngFor=\\\"let y of x.amenities\\\">\\n          {{y}} \\n         </ion-col>\\n       </ion-row>\\n       <ion-row>\\n\\n       \\n         <a [routerLink] = \\\"['/previews',x.uid,x.workspace_uid,x.spaceuid]\\\">Previews</a>\\n       </ion-row>\\n       <ion-row>\\n         <ion-col>\\n          <ion-button (click)=\\\"EditForm(x.spaceuid)\\\"> Edit</ion-button>\\n         </ion-col>\\n         <ion-col ><ion-button (click)=\\\" addGallary(x.spaceuid)\\\"    color=\\\"warning\\\">Gallary</ion-button></ion-col>\\n         <ion-col>\\n          <ion-button color=\\\"danger\\\" (click)=\\\"remove(x.spaceuid)\\\" > Remove</ion-button>\\n         </ion-col>\\n         <ion-col >\\n          <ion-button  [routerLink] = \\\"['/walkins',x.spaceuid,x.categories,x.workspace_uid]\\\"> Walkins</ion-button>\\n         </ion-col>\\n       </ion-row>\\n       <ion-row>\\n        <ion-button  [routerLink] = \\\"['/view-walkins',x.spaceuid,x.categories,x.workspace_uid]\\\">view Walkins</ion-button>\\n       </ion-row>\\n     </ion-grid>\\n    </ion-label>\\n  </ion-item>\\n</ion-row>\\n<ion-row>\\n\\n  <div *ngIf=\\\"GallaryStatusValue==1\\\">\\n\\n    <ion-item>\\n  \\n      <ion-input type=\\\"file\\\"  required   name=\\\"img\\\"  accept=\\\"image/*\\\" id=\\\"upload\\\" (change)=\\\"fileChangeEvent($event)\\\"></ion-input>\\n      <button (click)=\\\"uploadGallary()\\\" *ngIf=\\\"this.gallaryArraySize < 4\\\"> add image</button>\\n   \\n      <div>\\n        <div  style=\\\"color:red;\\\" *ngIf=\\\" this.imageError!==''\\\">{{this.imageError}}</div>\\n      \\n      </div>\\n    </ion-item>\\n    <ion-grid>\\n      <ion-row>\\n       <b>Total images upload: {{this.gallaryArraySize+1 }}</b> \\n\\n      </ion-row>\\n      <ion-row *ngIf=\\\"this.gallaryArraySize >= 4\\\">\\n        <span >Click image to delete</span>\\n      </ion-row>\\n      <ion-row>\\n        <ion-fab  horizontal=\\\"end\\\"  >\\n          <ion-fab-button    (click)=\\\"imageInArray()\\\" color=\\\"warning\\\">\\n            <ion-icon name=\\\"add\\\"></ion-icon>\\n          </ion-fab-button>\\n        </ion-fab>\\n      </ion-row>\\n      <ion-row (click)=\\\"freshers()\\\" >\\n        <ion-col *ngFor=\\\"let k of gallaryArray\\\"> \\n          <div *ngFor=\\\"let b of k.image\\\">\\n{{b.img}}\\n          </div>       \\n         <img (click)=\\\"deleteImage(k.spaceuid,k.gallaryuid)\\\" [src]=\\\"k.img\\\">\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n\\n  </div>\\n</ion-row>\\n      <ion-row>\\n        \\n  <div *ngIf=\\\"showFormvalue==1\\\">\\n\\n        <form #editSpaceForm=\\\"ngForm\\\" type=\\\"text\\\" style=\\\"width: 100%;top: 15%;height: 80%;\\\">\\n       \\n              <ion-label><b>Description</b> </ion-label>\\n             <ion-input\\n                type=\\\"text\\\"    \\n                [(ngModel)]=\\\"description_\\\" \\n                name=\\\"description\\\" \\n                required\\n                maxlength=\\\"100\\\"\\n                #description=\\\"ngModel\\\" \\n                placeholder=\\\"Company name..\\\">\\n              </ion-input>\\n              <div style=\\\"color:red;\\\" *ngIf=\\\"!description?.valid && (description?.dirty || description?.touched)\\\">\\n                Invalid description\\n                <div *ngIf=\\\"description.errors.required\\\">\\n                  description is required\\n               </div>\\n               <div *ngIf=\\\"description.errors.maxlength\\\">\\n                maxlength is 100\\n             </div>\\n             </div>\\n             <ion-label><b>Price</b> </ion-label>\\n            <ion-input  \\n                type=\\\"number\\\"  \\n                placeholder=\\\"price...\\\"\\n                [(ngModel)]=\\\"price_\\\" \\n              \\n                name=\\\"price_\\\">\\n            </ion-input>\\n      \\n            <ion-label><b>Province</b> </ion-label>\\n           <ion-input  \\n            type=\\\"text\\\"  \\n            placeholder=\\\"province ...\\\"\\n            [(ngModel)]=\\\"province_\\\" \\n            required\\n            maxlength=\\\"100\\\"\\n            #province=\\\"ngModel\\\" \\n            name=\\\"province\\\">\\n         </ion-input>\\n         <div style=\\\"color:red;\\\" *ngIf=\\\"!province?.valid && (province?.dirty || province?.touched)\\\">\\n          Invalid province\\n          <div *ngIf=\\\"province.errors.required\\\">\\n            province is required\\n         </div>\\n         <div *ngIf=\\\"province.errors.maxlength\\\">\\n          maxlength is 100\\n       </div>\\n       </div>\\n\\n       \\n        \\n       <ion-label><b>Address</b> </ion-label>\\n             <ion-textarea  \\n             type=\\\"text\\\"  \\n             [(ngModel)]=\\\"address_\\\" \\n             name=\\\"address\\\" \\n             required\\n             maxlength=\\\"100\\\"\\n             #address=\\\"ngModel\\\" \\n             style=\\\"border-style: solid;height: 15%;border-width: 1px;border-color: rgb(196, 190, 190);border-top: 0px;margin: 0px;\\\">\\n            </ion-textarea>\\n            <div style=\\\"color:red;\\\" *ngIf=\\\"!address?.valid && (address?.dirty || address?.touched)\\\">\\n              Invalid address\\n              <div *ngIf=\\\"address.errors.required\\\">\\n                address is required\\n             </div>\\n             <div *ngIf=\\\"address.errors.maxlength\\\">\\n              maxlength is 100\\n           </div>\\n           </div>\\n      \\n              <ion-label><b>Category Number</b> </ion-label>\\n              <ion-select  [(ngModel)]=\\\"category_number_\\\"   required     #category_number=\\\"ngModel\\\"  name=\\\"category_number\\\">\\n                  <ion-select-option value=\\\"1\\\">1</ion-select-option>\\n                  <ion-select-option value=\\\"2\\\">2</ion-select-option>\\n                  <ion-select-option value=\\\"3\\\">3</ion-select-option>\\n                  <ion-select-option value=\\\"4\\\">4</ion-select-option>\\n              </ion-select>\\n              <div style=\\\"color:red;\\\" *ngIf=\\\"!category_number?.valid && (category_number?.dirty || category_number?.touched)\\\">\\n                Invalid category_number\\n                <div *ngIf=\\\"address.errors.required\\\">\\n                  category_number is required\\n               </div>\\n            </div>\\n\\n\\n\\n\\n        \\n  \\n         \\n           \\n             <!-- <button (click)=\\\"addExtrasToarray()\\\">(+)</button> -->\\n\\n             \\n\\n             \\n              <!-- </ion-item> -->\\n\\n\\n  <ion-item>\\n    <ion-grid>\\n      <ion-row>\\n       <ion-item><p style=\\\"font-size:14px; font-weight: bolder;color: gray;\\\">update enemities</p></ion-item>\\n      </ion-row>\\n       <ion-row style=\\\"color: grey;margin: 5px;\\\">\\n         <ion-col *ngFor=\\\"let cartoon of cartoonsData\\\">\\n           <div style=\\\"font-size: 12px;\\\">{{ cartoon.name }} <br>  <input type=\\\"checkbox\\\"    (change)=\\\"onChange(cartoon.name, $event.target.checked)\\\" />\\n           </div>\\n         </ion-col>\\n       </ion-row>\\n     </ion-grid>\\n   </ion-item>\\n\\n\\n  \\n  <ion-item>\\n    <ion-button (click)=\\\" updateSpace()\\\" [disabled]=\\\"!editSpaceForm.valid\\\"   expand=\\\"full\\\" color=\\\"danger\\\">Edit</ion-button>\\n    <ion-button (click)=\\\" close()\\\"   expand=\\\"full\\\" color=\\\"warning\\\">Close</ion-button>\\n \\n  </ion-item>\\n  <div>\\n    <form #setMapForm=\\\"ngForm\\\" >\\n    <h3>Add address of workspace to google maps</h3>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Enter Address to Geocode</ion-label>\\n      <ion-input \\n                  type=\\\"text\\\" \\n                  [(ngModel)]=\\\"addressLocation\\\" \\n                  name=\\\"addressLocation\\\"\\n                  required\\n                  minlength=\\\"2\\\"\\n                  pattern=\\\"^[_A-z0-9]*((-|\\\\s)*[_A-z0-9])*$\\\"\\n                 \\n                  #addressLocationErr=\\\"ngModel\\\" \\n                  ></ion-input>\\n                  <div style=\\\"color:red;\\\" *ngIf=\\\"!addressLocationErr?.valid && (addressLocationErr?.dirty || addressLocationErr?.touched)\\\">\\n                    Invalid First Name\\n                    <div *ngIf=\\\"addressLocationErr.errors.required\\\">\\n                      First Name is required\\n                   </div>\\n                   <div *ngIf=\\\"addressLocationErr.errors.minlength\\\">\\n                     First Name Minimum Length is {{addressLocationErr.errors.minlength?.requiredLength}}\\n                   </div>\\n                 </div>\\n    </ion-item>\\n    <ion-row  *ngIf=\\\"!showingCurrent\\\">\\n      <ion-text class=\\\"coords\\\">My Latitude : {{lat}}</ion-text>\\n    </ion-row>\\n    <ion-row  *ngIf=\\\"!showingCurrent\\\">\\n      <ion-text class=\\\"coords\\\">My Longitude : {{lng}}</ion-text>\\n    </ion-row>\\n    <ion-button color=\\\"success\\\" [disabled]=\\\"!setMapForm.valid\\\" (click)=\\\"geocode()\\\" expand=\\\"full\\\" class=\\\"ion-margin\\\">\\n      Add to Google Maps</ion-button>  \\n    </form>\\n  </div>\\n       \\n\\n \\n  \\n\\n      </form>\\n  <!-- <ion-item> -->\\n    <div> \\n      <form #extrasForm=\\\"ngForm\\\">    \\n      <h3>Add extras</h3>\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col>\\n            <ion-input  \\n            type=\\\"text\\\"  \\n            placeholder=\\\"enemity...\\\"\\n            [(ngModel)]=\\\"enemity\\\" \\n            name=\\\"enemity\\\"\\n            maxlength=\\\"8\\\"\\n            required\\n            minlength=\\\"2\\\"\\n            pattern=\\\"^[a-zA-Z]+$\\\"\\n            #enemityErr=\\\"ngModel\\\" \\n            >\\n         </ion-input>\\n         <div style=\\\"color:red;\\\" *ngIf=\\\"!enemityErr?.valid && (enemityErr?.dirty || enemityErr?.touched)\\\">\\n          Invalid First item\\n          <div *ngIf=\\\"enemityErr.errors.required\\\">\\n            item is required\\n         </div>\\n         <div *ngIf=\\\"enemityErr.errors.minlength\\\">\\n           First Name Minimum Length is {{enemityErr.errors.minlength?.requiredLength}}\\n         </div>\\n         <div *ngIf=\\\"enemityErr.errors.maxlength\\\">\\n          First Name Maximum Length is {{enemityErr.errors.maxlength?.requiredLength}}\\n        </div>\\n       </div>\\n          </ion-col>\\n          <ion-col>\\n            <ion-input  \\n            type=\\\"number\\\"  \\n            placeholder=\\\"Price...\\\"\\n            [(ngModel)]=\\\"price\\\" \\n            name=\\\"price\\\"\\n            required\\n            maxlength=\\\"3\\\"\\n            minlength=\\\"2\\\"\\n            pattern=\\\"^[0-9]+$\\\"\\n            #priceErr=\\\"ngModel\\\" \\n            >\\n         </ion-input>\\n         <div style=\\\"color:red;\\\" *ngIf=\\\"!priceErr?.valid && (priceErr?.dirty || priceErr?.touched)\\\">\\n          Invalid Price\\n          <div *ngIf=\\\"priceErr.errors.required\\\">\\n            Price is required\\n         </div>\\n         <div *ngIf=\\\"priceErr.errors.minlength\\\">\\n          Price Minimum Length is {{priceErr.errors.minlength?.requiredLength}}\\n         </div>\\n         <div *ngIf=\\\"priceErr.errors.maxlength\\\">\\n          Price Maximum Length is {{priceErr.errors.maxlength?.requiredLength}}\\n        </div>\\n       </div>\\n          </ion-col>\\n       \\n          <ion-col>\\n            {{this.messageValue}}\\n          </ion-col>\\n \\n          <ion-col>\\n            <div>Items:{{this.extrasCart}}</div>\\n            <ion-fab  horizontal=\\\"end\\\"  >\\n              <ion-fab-button *ngIf=\\\"this.extrasCart<5\\\"  [disabled]=\\\"!extrasForm.valid\\\" (click)=\\\"addExtrasToarray()\\\" color=\\\"danger\\\">\\n                <ion-icon name=\\\"add\\\"></ion-icon>\\n              </ion-fab-button>\\n            </ion-fab>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row>\\n        \\n          <ion-button *ngIf=\\\"this.extrasCart>0\\\"  [disabled]=\\\"!extrasForm.valid\\\" expand=\\\"full\\\" color=\\\"secondary\\\" (click)=\\\"addExtras()\\\"> Add</ion-button>\\n        </ion-row>\\n      </ion-grid>\\n</form>\\n</div> \\n<div>\\n<form #changeImageForm=\\\"ngForm\\\">\\n        <h3>Change profile</h3>\\n        <div>\\n          <ion-input type=\\\"file\\\"  required   name=\\\"img\\\"  accept=\\\"image/*\\\" id=\\\"upload\\\" (change)=\\\"fileChangeEvent($event)\\\"></ion-input>\\n        \\n          <div style=\\\"color:red;\\\" *ngIf=\\\"!priceErr?.valid && (priceErr?.dirty || priceErr?.touched)\\\">\\n            Invalid Price\\n            <div *ngIf=\\\"priceErr.errors.required\\\">\\n              Price is required\\n           </div>\\n         </div>\\n         <ion-button [disabled]=\\\"!changeImageForm.valid\\\" *ngIf=\\\" this.isImageSaved\\\" expand=\\\"full\\\" color=\\\"success\\\"  (click)=\\\"changeImage()\\\"> Change Profile</ion-button>\\n          <div>\\n            <div style=\\\"color:red;\\\" *ngIf=\\\" this.imageError!==''\\\">{{this.imageError}}</div>\\n          </div>\\n          \\n        </div>\\n  \\n      </form>\\n</div>\\n      </div>\\n      </ion-row>\\n    </ion-grid>\\n   \\n    \\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UpdateSpacePage } from './update-space.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UpdateSpacePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UpdateSpacePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UpdateSpacePageRoutingModule } from './update-space-routing.module';\n\nimport { UpdateSpacePage } from './update-space.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UpdateSpacePageRoutingModule\n  ],\n  declarations: [UpdateSpacePage]\n})\nexport class UpdateSpacePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VwZGF0ZS1zcGFjZS91cGRhdGUtc3BhY2UucGFnZS5zY3NzIn0= */\";","\nimport { Component, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { SignInSignUpService } from 'src/app/sign-in-sign-up.service';\nimport firebase from 'firebase/app';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { FormBuilder, FormGroup, FormArray, FormControl } from '@angular/forms';\nimport { OwnerServiceService } from 'src/app/services/owner.service';\n\nimport { IonInfiniteScroll, LoadingController, PopoverController } from '@ionic/angular';\nimport { MassegesPage } from 'src/app/feedback/masseges/masseges.page';\n//////////////Geolocation and Geocode//////////\nimport { Plugins } from '@capacitor/core';\nconst { Geolocation, Toast } = Plugins;\nimport { NativeGeocoder, NativeGeocoderResult, NativeGeocoderOptions } from '@ionic-native/native-geocoder/ngx';\n\n\nexport interface Cartoon {\n  id: number;\n  name: string;\n}\n\n@Component({\n  selector: 'app-update-space',\n  templateUrl: './update-space.page.html',\n  styleUrls: ['./update-space.page.scss'],\n})\nexport class UpdateSpacePage implements OnInit {\n\n  enemity:any\n  price:any\n  extras:any={}\n  extrasArray:any=[]\n\n  arrayList:any=[]\n  arrayEdit:any=[]\n  category = this.route.snapshot.params.category;\n  // cateuid = this.route.snapshot.params.cateuid; gallaryArray\n  showFormvalue: number;\n  spaceUid:any\n  description_: any;\n  address_: any;\n  category_number_: any;\n  price_: any;\n  province_: any;\n  amenities_: any=[];\n\n\n  amenitiesEdit:any=[]\n  cartoonsData: Cartoon[] = [\n    { id: 0, name: 'lights' },\n    { id: 1, name: 'guachairsrds' },\n    { id: 2, name: 'aircon' },\n    { id: 3, name: 'plugs'},\n    { id: 4, name: 'kitchen'},\n    { id: 5, name: 'sunlight'},\n    { id: 6, name: 'toilet'},\n    { id: 7, name: 'clean'},\n    { id: 8, name: 'safety'},\n    { id: 9, name: 'tv'},\n    { id: 10, name: 'wifi'},\n    { id: 11, name: 'microphone'},\n    { id: 12, name: 'speakers'},\n    { id: 13, name: 'phone'},\n    { id: 14, name: 'desktop'},\n    { id: 15, name: 'bin'}\n\n  ];\n  categories_: any;\n  city_: any;\n\n  \n\n\n\n  imageError: string;\n  isImageSaved: boolean;\n  EditIsImageSaved: boolean;\n  cardImageBase64: string;\n  workspaceuid: string;\n\n  GallaryStatusValue:any=0;\n  gallaryArray:any=[]\n  gallaryArraySize: number=-1;\n  spaceid: string;\n  extrasCart: number=0;\n  gallaryuid: string;\n\n  onChange(name: string, isChecked: boolean) {\n    this.amenitiesEdit.push((name));\n    console.log(this.amenitiesEdit)\n  }\n  fileChangeEvent(fileInput: any) {\n\n\n\n    this. imageError = null;\n    if(fileInput.target.files && fileInput.target.files[0]){\n        const max_size = 20971520;\n        const allowed_types = ['image/png', 'image/jpeg'];\n        const max_height = 15200;\n        const max_width = 25600;   \n        if(fileInput.target.files[0].size > max_size){\n          this.imageError = 'Maximum size allowed is ' + max_size / 1000 + 'Mb';\n          return false;\n        }\n        if (!allowed_types.includes( fileInput.target.files[0].type)) {\n          this.imageError = 'Only Images are allowed ( JPG | PNG )';\n          return false;\n        }\n        const reader = new FileReader();\n        reader.onload = (e:any)=>{\n            const image = new Image();\n            image.src = e.target.result;\n            image.onload = rs=> {\n              const img_height = rs.currentTarget['height'];\n              const img_width = rs.currentTarget['width'];\n              console.log(img_height,img_width);\n              if(img_height > max_height && img_width > max_width){\n                this.imageError =\n                'Maximum dimentions allowed ' +\n                max_height +\n                '*' +\n                max_width +\n                'px';\n                return false;\n              }else{\n                const imgBase64Path = e.target.result;\n                this.cardImageBase64 = imgBase64Path;\n                this.isImageSaved = true;\n               return this.cardImageBase64;\n              }\n            }\n          }\n        reader.readAsDataURL(fileInput.target.files[0])\n    }\n  \n  }\n\n//////////////Geolocation and Geocode//////////\npublic lat: any;\npublic lng: any;\nshowingCurrent: boolean = true;\naddressLocation: string; \n\n  constructor(public loader:LoadingController,private nativeGeocoder: NativeGeocoder, private ngZone: NgZone,private popover:PopoverController,private route:ActivatedRoute,public ownerservice:OwnerServiceService,public account:SignInSignUpService) { \n   \n   \n   \n    //this.checkGallary();\n    firebase.firestore().collection(\"profiles\")\n    .doc(this.account.getUserSession())\n    .collection(\"profile\").doc(this.ownerservice.getWorkSpaceUID()).collection(\"space\")\n    .where(\"uid\",\"==\",this.account.getUserSession()).where(\"categories\",\"==\",this.category)\n.get()\n.then(doc => {\n\ndoc.forEach(dat=>{\nthis.arrayList.push(Object.assign(dat.data(),{\"spaceuid\":dat.id}))\nthis.workspaceuid=dat.id;\n\n})\nthis.checkGallary(this.workspaceuid);\nconsole.log(this.arrayList)\n})\n\n\n\n  }\n\n  ngOnInit() {\n  }\n  EditForm(id){\n    this.showFormvalue = 1;\n    this.GallaryStatusValue=0\n    this.spaceUid=id;\n    console.log(this.spaceUid)\n\n\n    console.log(this.category)\n    firebase.firestore().collection(\"profiles\")\n    .doc(this.account.getUserSession())\n    .collection(\"profile\").doc(this.ownerservice.getWorkSpaceUID()).collection(\"space\").doc(this.spaceUid)\n    \n.get()\n.then(doc => {\n  this.description_ = doc.data().description;\n  this.address_=doc.data().address;\n  this.category_number_=doc.data().category_number;\n  this.price_=doc.data().price;\n  this.province_ =doc.data().province;\n  this.amenities_  =(doc.data().amenities);\n  this.categories_ =doc.data().categories\n  this.city_=doc.data().city;\n  this.spaceid = doc.id\n  console.log( this.amenities_)\n})\n\n\n\n}\n\n\n\n\n\nupdateSpace(){\n // console.log( this.description_+\"/\"+this.address_+\"/\"+this.category_number_+\"/\"+this.price_+\"/\"+this.province_+\"/\"+this.amenitiesEdit )\n  this.ownerservice.updateCoworkingSpace(this.account.getUserSession(),this.ownerservice.getWorkSpaceUID(),this.spaceUid,this.categories_,this.category_number_,this.address_,this.price_,this.city_,this.province_,this.amenitiesEdit,this.description_) \n  this.CreatePopover()\n}\nclose(){\n  this.showFormvalue = 0;\n}\nremove(id){\n  this.ownerservice.deleteSpace(this.account.getUserSession(),this.ownerservice.getWorkSpaceUID(),id) \n  this. CreatePopover()\n}\nchangeImage(){\n  \n  this.ownerservice.changeImgSpace(this.account.getUserSession(), this.ownerservice.getWorkSpaceUID(), this.cardImageBase64,this.spaceUid)\n  this.CreatePopover()\n}\n\naddExtrasToarray(){\n\n  var extrasx = {\n    anemenity:this.enemity,\n    price: this.price\n};\n\nthis.extrasArray.push(extrasx)\nthis.extrasCart=this.extrasArray.length\nconsole.log(this.extrasArray)\n\n}\naddExtras(){\n  this.ownerservice.extrasAmenities(this.account.getUserSession(), this.ownerservice.getWorkSpaceUID(), this.extrasArray,this.spaceUid)\n}\naddGallary(x){\n  this.showFormvalue = 0;\n  this.GallaryStatusValue=1;\n  this.workspaceuid=x;\n}\ngetSpaceUid(){\n  return this.workspaceuid\n}\nuploadGallary(){\nconsole.log(this.workspaceuid)\n  this.ownerservice.addGallary(this.account.getUserSession(),this.ownerservice.getWorkSpaceUID(),this.workspaceuid, this.imageList,this.gallaryuid)\n // this.imageArrayList(this.cardImageBase64)\n  //  this.freshers(); gallaryArray\n}\n\nimageList:any=[];\nimageInArray(){\n\n  var gallary = {\n    img:this.cardImageBase64\n};\n\nthis.imageList.push(gallary)\n//this.extrasCart=this.extrasArray.length\nconsole.log(this.imageList)\n\n}\n\n\ncheckGallary(valueuid){\n  console.log(this.ownerservice.getWorkSpaceUID())\n  console.log(this.account.getUserSession())\n  console.log(valueuid)\n\n  var db = firebase.firestore();\n  var hotelsRef = db.collection(\"profiles\").doc(this.account.getUserSession());\n    hotelsRef.collection(\"profile\").doc(this.ownerservice.getWorkSpaceUID())\n             .collection(\"space\").doc(valueuid)\n             .collection(\"gallary\").where(\"uid\",\"==\",this.account.getUserSession())\n   .get().then(doc=>{\n       doc.forEach(dat=>{\n        this.gallaryArray.push(Object.assign(dat.data(),{'gallaryuid':dat.id}) )\n        this.gallaryuid = dat.id\n        this.gallaryArraySize=this.gallaryArray.length-1\n       })\n   })\n  }\n\n\n  deleteImage(spaceuid,gallaryuid){\n    var db = firebase.firestore();\n    var hotelsRef = db.collection(\"profiles\").doc(this.account.getUserSession());\n      hotelsRef.collection(\"profile\").doc(this.ownerservice.getWorkSpaceUID())\n               .collection(\"space\").doc(spaceuid)\n               .collection(\"gallary\").doc(gallaryuid).delete().then((res) => {\n                 console.log(\"deleted\")\n\n      })\n    \n  }\n\n\nCreatePopover()\n{\n  this.popover.create({component:MassegesPage,\n  showBackdrop:false}).then((popoverElement)=>{\n    popoverElement.present();\n  })\n}\n\n//////////////Geolocation and Geocode//////////\nasync geocode() {\n  this.ownerservice.geoCodeLocation(this.account.getUserSession(), this.ownerservice.getWorkSpaceUID(),this.spaceUid,-26.269212999999997,27.790485)\n  if (this.addressLocation != \"\") {\n\n    let options: NativeGeocoderOptions = {\n      useLocale: true,\n      maxResults: 5\n    };\n    this.nativeGeocoder.forwardGeocode(this.addressLocation, options)\n      .then((result: NativeGeocoderResult[]) => {\n        this.ngZone.run(() => {\n          this.lat = parseFloat(result[0].latitude);\n          this.lng = parseFloat(result[0].longitude);\n     \n          this.ownerservice.geoCodeLocation(this.account.getUserSession(), this.ownerservice.getWorkSpaceUID(),this.spaceUid,this.lat,this.lng)\n          //  geoCodeLocation(user_uid, profile_uid,cate_uid,lat,log)\n          // this.myMap.triggerResize()\n          //   .then(() => (this.myMap as any)._mapsWrapper.setCenter({ lat: this.lat, lng: this.lng }));\n        })\n        this.showingCurrent = false;\n      })\n      .catch((error: any) => console.log(error));\n  }\n  else {\n    await Toast.show({\n      text: 'Please add address to Geocode'\n    });\n  }\n}\n\n\n////Refreshers\ndummyList:any=[] \ndoRefresh(event) {  \n  console.log('Pull Event Triggered!');  \n  setTimeout(() => {\n    this.dummyList = Array(5);\n    event.target.complete();\n  }, 1500); \n}  \n\n\ndoRefreshT(event) {  \n      console.log('Pull Event Triggered!');  \n    }  \n\n\nfreshers(){\n  this.loader.create({\n    message: 'This Loader Will Auto Hide in 2 Seconds',\n    duration: 2000\n  }).then((res) => {\n    res.present();\n\n    res.onDidDismiss().then((dis) => {\n      console.log('Loading dismissed! after 2 Seconds', dis);\n    });\n  }); \n}\n\n\n}\n\n\n"]}