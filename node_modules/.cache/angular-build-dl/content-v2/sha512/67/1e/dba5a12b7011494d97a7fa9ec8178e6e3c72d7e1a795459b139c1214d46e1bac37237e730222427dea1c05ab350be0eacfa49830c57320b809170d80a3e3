{"version":3,"sources":["webpack:///src/app/pages/user-group/user-group.page.html","webpack:///src/app/pages/user-group/user-group-routing.module.ts","webpack:///src/app/pages/user-group/user-group.module.ts","webpack:///src/app/pages/user-group/user-group.page.scss","webpack:///src/app/pages/user-group/user-group.page.ts","webpack:///src/app/sign-in-sign-up.service.ts"],"names":["routes","path","component","UserGroupPageRoutingModule","imports","forChild","exports","UserGroupPageModule","declarations","UserGroupPage","accountServices","router","getEmail","getUserSession","userGroup","value_selected","console","log","selector","template","SignInSignUpService","route","db","firestore","auth","onAuthStateChanged","user","uid","setuid","a","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","then","results","currentUser","userSession","checkExistance","error","message","uidOwner","emailOwner","usergroup","userGroupCollecion","collection","query","Promise","all","doc","set","company_name","company_tel","company_website","social_media","company_address","date","Date","collectionGroup","where","get","snap","forEach","exists","data","status","navigateByUrl","x","providedIn"],"mappings":"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","file":"pages-user-group-user-group-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>user-group</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-radio-group [(ngModel)]=\\\"value_selected\\\"> \\n    <ion-list-header>\\n      <ion-label>User Froup</ion-label>\\n    </ion-list-header>\\n    <ion-item>\\n      <ion-label>User</ion-label>\\n      <ion-radio slot=\\\"start\\\" color=\\\"success\\\"  value=\\\"user\\\" ></ion-radio>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label>Owner</ion-label>\\n      <ion-radio slot=\\\"start\\\" color=\\\"tertiary\\\"  value=\\\"owner\\\" ></ion-radio>\\n    </ion-item>\\n   </ion-radio-group> \\n{{value_selected}}\\n<ion-item>\\n  <ion-button (click)=\\\"submit()\\\"  type=\\\"submit\\\" expand=\\\"block\\\" >Submit</ion-button>\\n</ion-item>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserGroupPage } from './user-group.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserGroupPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserGroupPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserGroupPageRoutingModule } from './user-group-routing.module';\n\nimport { UserGroupPage } from './user-group.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UserGroupPageRoutingModule\n  ],\n  declarations: [UserGroupPage]\n})\nexport class UserGroupPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VzZXItZ3JvdXAvdXNlci1ncm91cC5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n// import { FormBuilder, Validators } from \"@angular/forms\";\nimport { Router } from '@angular/router';\nimport { SignInSignUpService } from 'src/app/sign-in-sign-up.service';\n\n@Component({\n  selector: 'app-user-group',\n  templateUrl: './user-group.page.html',\n  styleUrls: ['./user-group.page.scss'],\n})\nexport class UserGroupPage implements OnInit {\n\n  value_selected:string\n  constructor( public accountServices: SignInSignUpService,  private router: Router\n) {\n  this.accountServices.getEmail();\n  this.accountServices.getUserSession();\n\n}\n  ngOnInit() {\n    this.accountServices.userGroup(this.accountServices.getUserSession(),\n                                  \"owner\",\n                                   this.accountServices.getEmail())\n                                   \n  }\n\n  submit(){\n     this.accountServices.userGroup(this.accountServices.getUserSession(),\n                                    this.value_selected,\n                                    this.accountServices.getEmail()\n                                    )\n    console.log(this.value_selected)\n  }\n}\n","import { Injectable } from '@angular/core';\nimport firebase from 'firebase/app';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { from } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignInSignUpService {\n\n  db = firebase.firestore()\n  uidOwner: any\n  emailOwner: any;\n  email: any;\n  uid: any;\n  // UID:any;\n  status: boolean;\n  group: any\n\n  constructor(private router: Router, public route: ActivatedRoute) { }\n  // async createAccount(email, password) {\n  //   firebase.auth().createUserWithEmailAndPassword(email, password).then(results => {\n  //     console.log(results);\n  //   }).catch((error) => {\n  //     console.log(error.message);\n  //   })\n  // }\n\n  signAuth(){\n    return firebase.auth().onAuthStateChanged(user => {\n     if(user){\n      const uid = user.uid;\n      //  this.setSession(email);\n      this.setuid(uid)\n      console.log('user logged in: ', user);\n     }else{\n       console.log('user logged out')\n     }\n    });\n  }\n  setuid(a){\n    this.uid = a;\n  }\n  getUid(){\n    return this.uid;\n  }\n  Signup(email, password) {\n\n    return firebase.auth().createUserWithEmailAndPassword(email, password)\n\n  }\n\n  async SignIn(email, password) {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(results => {\n      console.log(results);\n      var user = firebase.auth().currentUser;\n      var email, uid;\n      if (user != null) {\n        email = user.email;\n        uid = user.uid;\n        this.userSession(uid);\n        this.checkExistance(this.getUserSession())\n\n        console.log(\"details: \" + email + ' ' + this.getUserSession())\n      }\n      // this.router.navigateByUrl('booking-list');\n    }).catch((error) => {\n      console.log(error.message);\n    })\n  }\n  userSession(uidOwner) {\n    this.uidOwner = uidOwner;\n  }\n  userEmail(emailOwner) {\n    this.emailOwner = emailOwner;\n  }\n\n  getUserSession() {\n    return this.uidOwner;\n  }\n  logOut() {\n    this.uidOwner =null\n    return this.uidOwner ;\n  }\n  getEmail() {\n    return this.emailOwner;\n  }\n\n  userGroup(uid, usergroup, email) {\n    var db = firebase.firestore();\n    var userGroupCollecion = db.collection(\"profiles\");\n    var query = Promise.all([\n      userGroupCollecion.doc(uid).collection('profile').doc().set({\n        company_name: \"company name\",\n        // company_emaile: email,\n        company_tel: \"company telephone\",\n        company_website: \"www.webste.com\",\n        social_media: \"social media links\",\n        company_address: \"address\",\n        usergroup: usergroup,\n        uid: uid,\n        date: new Date()\n      })\n    ]);\n  }\n\n\n  checkExistance(uid) {\n\n\n\n    this.db.collectionGroup(\"profile\")\n      .where(\"uid\", \"==\", (uid))\n      // .where(\"publishedAt\", \"<=\", new Date(\"2018-12-31 23:59\"))\n      .get()\n      .then(snap => {\n        snap.forEach(doc => {\n          if (!doc.exists) {\n            console.log(\"No such user in the profiles Document!\");\n          } \n          if(doc.exists){\n        \n            // if (doc.data().usergroup == 'user') {\n          \n            //   this.status = true;            \n            //  // console.log(\"Document data:\", doc.data());\n            //  console.log(\"user welcome\");\n            //   // this.router.navigateByUrl('profile');\n            // } else\n              if (doc.data().usergroup == 'owner') {\n                console.log(\"Owner\")\n                this.status = true;\n                console.log(\"Document data:\", doc.data());\n             this.router.navigateByUrl('owner-landing');\n              }\n        \n          }\n     \n        });\n        // if (this.status != true){\n        //   // console.log(this.status)\n        //   console.log(\"Create profile please\")\n        //   this.router.navigateByUrl('/user-group');\n        // }\n      });\n      \n      \n      \n  }\n  setStatus(x) {\n    this.status = x;\n  }\n  returnStatus() {\n    return this.status\n  }\n}\n"]}