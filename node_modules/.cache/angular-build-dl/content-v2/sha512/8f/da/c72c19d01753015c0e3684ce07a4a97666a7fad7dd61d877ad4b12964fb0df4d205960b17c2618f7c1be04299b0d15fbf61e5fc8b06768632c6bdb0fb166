{"version":3,"sources":["webpack:///src/app/services/owner.service.ts","webpack:///src/app/sign-in-sign-up.service.ts"],"names":["OwnerServiceService","router","db","firestore","array","auth","arr","resArr","Array","resProfArray","onAuthStateChanged","user","uid","setuid","console","log","a","UID","collection","user_uid","company_tel","company_address","company_website","social_media","company_emaile","company_name","img_profile","outside_features","aboutus","hotelsRef","doc","hotel","Promise","all","set","merge","then","profile_uid","image","cate_uid","update","extras","extraAmenities","lat","lng","profiles_uid","categories","category_number","address","city","province","amenities","price","description","add","workspace_uid","spaceuid","gallaryid","name","surname","email","phone","timeout","timein","checkout","checkin","category","date","Date","spaceBooked","usertype","citiesRef","res","space_uid","reserv_uid","read","providedIn","SignInSignUpService","route","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","results","currentUser","userSession","checkExistance","getUserSession","error","message","uidOwner","emailOwner","usergroup","userGroupCollecion","query","collectionGroup","where","get","snap","forEach","exists","data","status","navigateByUrl","x"],"mappings":"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","file":"default~pages-add-space-add-space-module~pages-homepages-view-space-view-space-module~pages-homepage~2c6a9d01-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/firestore';\nimport { from } from 'rxjs';\nimport { Router } from '@angular/router';\n@Injectable({\n  providedIn: 'root'\n})\nexport class OwnerServiceService {\n  db = firebase.firestore()\n  array:Array<any>=[];\n  firebase: any;\n  auth = firebase.auth();\n  arr = [];\n  resArr = new Array()\n  resProfArray = new Array()\n  UID: any;\n  workspace_uid: any;\n  constructor(private router: Router) { }\n\n  signAuth() {\n    return firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        const uid = user.uid;\n        //  this.setSession(users);\n        this.setuid(uid)\n        console.log('user logged in: ', user);\n      } else {\n        console.log('user logged out')\n      }\n    });\n  }\n  setuid(a) {\n    this.UID = a;\n  }\n  getUid() {\n    return this.UID;\n  }\n  reserve() {\n    return firebase.firestore().collection('CoWorking-Space');\n  }\n  //   gallery() {\n  //   return firebase.firestore().doc('space');\n  // }\n\n  updateProfile(user_uid, uid, company_tel, company_address,\n    company_website, social_media, company_emaile,\n    company_name, img_profile, outside_features, aboutus) {\n    var db = firebase.firestore();\n    var hotelsRef = db.collection(\"profiles\").doc(uid);\n    var hotel = Promise.all([\n      hotelsRef.collection(\"profile\").doc(user_uid)\n        .set({\n          company_address: company_address,\n          company_tel: company_tel,\n          company_website: company_website,\n          social_media: social_media,\n          company_emaile: company_emaile,\n          company_name: company_name,\n          uid: uid,\n          user_uid: user_uid,\n          img_profile: img_profile,\n          outside_features: outside_features,\n          aboutus: aboutus\n        }, { merge: true }).then(a => {\n          console.log(\"Changed\")\n        })\n    ]);\n  }\n  editProfile(user_uid, uid, company_tel, company_address,\n    company_website, company_emaile,\n    company_name, outside_features:any[], aboutus) {\n    var db = firebase.firestore();\n    var hotelsRef = db.collection(\"profiles\");\n    hotelsRef.doc(uid).collection(\"profile\").doc(user_uid)\n    .set({\n      company_address: company_address,\n      company_tel: company_tel,\n      company_website: company_website,\n   \n      company_emaile: company_emaile,\n      company_name: company_name,\n      uid: uid,\n      user_uid: user_uid,\n      outside_features: outside_features,\n      aboutus: aboutus\n     }, { merge: true })\n  }\n  changeImg(user_uid, uid, img_profile) {\n    var db = firebase.firestore();\n    var hotelsRef = db.collection(\"profiles\");\n    hotelsRef.doc(uid).collection(\"profile\").doc(user_uid)\n    .set({\n      uid: uid,\n      user_uid: user_uid,\n      img_profile: img_profile\n     }, { merge: true })\n  }\n\n  changeImgSpace(user_uid, profile_uid, image,cate_uid) {\n    var db = firebase.firestore();\n    var hotelsRef = db.collection(\"profiles\");\n    hotelsRef.doc(user_uid).collection(\"profile\").doc(profile_uid).collection(\"space\").doc(cate_uid)\n    .update({\n      image: image\n     })\n  }\n  extrasAmenities(user_uid, profile_uid, extras:any[],cate_uid) {\n    var db = firebase.firestore();\n    var hotelsRef = db.collection(\"profiles\");\n    hotelsRef.doc(user_uid).collection(\"profile\").doc(profile_uid).collection(\"space\").doc(cate_uid)\n    .set({\n      extraAmenities: extras\n     }, { merge: true })\n  }\n  geoCodeLocation(user_uid, profile_uid,cate_uid,lat,log) {\n    var db = firebase.firestore();\n    var hotelsRef = db.collection(\"profiles\");\n    hotelsRef.doc(user_uid).collection(\"profile\").doc(profile_uid).collection(\"space\").doc(cate_uid)\n    .set({\n      lat: lat,\n      lng:log\n     }, { merge: true })\n  }\n  // console.log( this.addCoSpaceForm.value.categories+\" \"+\n  // this.addCoSpaceForm.value.category_number\n  // +\" \"+this.addCoSpaceForm.value.address\n  // +\" \"+this.addCoSpaceForm.value.city\n  // +\" \"+this.addCoSpaceForm.value.province)\n\n\n\n  addcoworkingSpace(profiles_uid,profile_uid,categories,category_number,address,city,province,amenities,image,price,description) {\n    var db = firebase.firestore();\n    var hotelsRef = db.collection(\"profiles\").doc(profiles_uid);\n    var hotel = Promise.all([\n      hotelsRef.collection(\"profile\").doc(profile_uid).collection(\"space\")\n        .add({\n          uid: profiles_uid,\n          workspace_uid:profile_uid,\n          categories:categories,\n          category_number:category_number,\n          address:address,\n          city:city,\n          province:province,\n          amenities:amenities,\n          image:image,\n          price:price,\n          description:description\n        }).then(a => {\n          console.log(\"Changed\")\n        })\n    ]);\n  }\n\n  addGallary(profiles_uid,profile_uid,spaceuid,image:[],gallaryid) {\n    var db = firebase.firestore();\n    var hotelsRef = db.collection(\"profiles\").doc(profiles_uid);\n    var hotel = Promise.all([\n      hotelsRef.collection(\"profile\").doc(profile_uid)\n               .collection(\"space\").doc(spaceuid)\n               .collection(\"gallary\").doc(gallaryid)\n        .set({\n          uid: profiles_uid,\n          workspace_uid:profile_uid,\n          spaceuid:spaceuid,\n          image:image\n        }).then(a => {\n          console.log(\"Changed\")\n        })\n    ]);\n  }\n\n  walkinBooking(profiles_uid,profile_uid,spaceuid,name,\n          surname,email,phone,timeout,timein,checkout,\n          checkin,category\n          ) {\n    var db = firebase.firestore();\n    var hotelsRef = db.collection(\"profiles\").doc(profiles_uid);\n    var hotel = Promise.all([\n      hotelsRef.collection(\"profile\").doc(profile_uid)\n               .collection(\"space\").doc(spaceuid)\n               .collection(\"walkins\")\n        .add({\n          name: name,\n          surname:surname,\n          email:email,\n          phone:phone,\n          timeout:timeout,\n          timein:timein,\n          checkout:checkout,\n          checkin:checkin,\n          spaceuid:spaceuid,\n          category:category,\n          date: new Date() \n        }).then(a => {\n          console.log(\"Changed\")\n        })\n    ]);\n  }\n\n\n  updateCoworkingSpace(profiles_uid,profile_uid,cate_uid,categories,category_number,address,price,city,province,amenities,description) {\n    var db = firebase.firestore();\n    var hotelsRef = db.collection(\"profiles\").doc(profiles_uid);\n    var hotel = Promise.all([\n      hotelsRef.collection(\"profile\").doc(profile_uid).collection(\"space\").doc(cate_uid)\n        .update({\n          uid: profiles_uid,\n          workspace_uid:profile_uid,\n          categories:categories,\n          category_number:category_number,\n          address:address,\n          city:city,\n          province:province,\n          amenities:amenities,\n          price:price,\n          description:description\n        }).then(a => {\n          console.log(\"Changed\")\n        })\n    ]);\n  }\n  deleteSpace(profiles_uid,profile_uid,cate_uid) {\n    var db = firebase.firestore();\n    var hotelsRef = db.collection(\"profiles\").doc(profiles_uid);\n    var hotel = Promise.all([\n      hotelsRef.collection(\"profile\").doc(profile_uid).collection(\"space\").doc(cate_uid)\n        .delete().then(a => {\n          console.log(\"Changed\")\n        })\n    ]);\n  }\n\n\n\n\n\n  reservation(uid, name, surname, phone, checkin, checkout, timein, timeout, spaceBooked, usertype) {\n    var citiesRef = firebase.firestore().collection('profiles')\n    var hotel = Promise.all([\n      citiesRef.doc(\"8j3w4lEbm3OBxgQYVNGQmN1YU292\").collection(\"bookings\").add({\n        name: name,\n        surname: surname,\n        phone: phone,\n        checkin: checkin,\n        checkout: checkout,\n        timein: timein,\n        timeout: timeout,\n        spaceBooked: spaceBooked,\n        usertype: usertype,\n        date: new Date()\n      }).then((res) => {\n\n      })\n    ]);\n  }\n\n\n\n\n  readOrNot(profiles_uid,profile_uid,space_uid,reserv_uid,read:boolean) {\n    var db = firebase.firestore();\n    var hotelsRef = db.collection(\"profiles\").doc(profiles_uid);\n    var hotel = Promise.all([\n      hotelsRef.collection(\"profile\").doc(profile_uid)\n               .collection(\"space\").doc(space_uid)\n               .collection(\"reservation\").doc(reserv_uid)\n        .set({\n          read:true\n        },{ merge: true }).then(a => {\n          console.log(\"Changed\")\n        })\n    ]);\n  }\n///////////////////////////////////////////////////////////////////\n//////////////////////////Get Workspace Uid///////////////////////\nsetWorkSpaceUID(uid){\n  this.workspace_uid =uid;\n}\ngetWorkSpaceUID(){\n return this.workspace_uid ;\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport firebase from 'firebase/app';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { from } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignInSignUpService {\n\n  db = firebase.firestore()\n  uidOwner: any\n  emailOwner: any;\n  email: any;\n  uid: any;\n  // UID:any;\n  status: boolean;\n  group: any\n\n  constructor(private router: Router, public route: ActivatedRoute) { }\n  // async createAccount(email, password) {\n  //   firebase.auth().createUserWithEmailAndPassword(email, password).then(results => {\n  //     console.log(results);\n  //   }).catch((error) => {\n  //     console.log(error.message);\n  //   })\n  // }\n\n  signAuth(){\n    return firebase.auth().onAuthStateChanged(user => {\n     if(user){\n      const uid = user.uid;\n      //  this.setSession(email);\n      this.setuid(uid)\n      console.log('user logged in: ', user);\n     }else{\n       console.log('user logged out')\n     }\n    });\n  }\n  setuid(a){\n    this.uid = a;\n  }\n  getUid(){\n    return this.uid;\n  }\n  Signup(email, password) {\n\n    return firebase.auth().createUserWithEmailAndPassword(email, password)\n\n  }\n\n  async SignIn(email, password) {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(results => {\n      console.log(results);\n      var user = firebase.auth().currentUser;\n      var email, uid;\n      if (user != null) {\n        email = user.email;\n        uid = user.uid;\n        this.userSession(uid);\n        this.checkExistance(this.getUserSession())\n\n        console.log(\"details: \" + email + ' ' + this.getUserSession())\n      }\n      // this.router.navigateByUrl('booking-list');\n    }).catch((error) => {\n      console.log(error.message);\n    })\n  }\n  userSession(uidOwner) {\n    this.uidOwner = uidOwner;\n  }\n  userEmail(emailOwner) {\n    this.emailOwner = emailOwner;\n  }\n\n  getUserSession() {\n    return this.uidOwner;\n  }\n  logOut() {\n    this.uidOwner =null\n    return this.uidOwner ;\n  }\n  getEmail() {\n    return this.emailOwner;\n  }\n\n  userGroup(uid, usergroup, email) {\n    var db = firebase.firestore();\n    var userGroupCollecion = db.collection(\"profiles\");\n    var query = Promise.all([\n      userGroupCollecion.doc(uid).collection('profile').doc().set({\n        company_name: \"company name\",\n        // company_emaile: email,\n        company_tel: \"company telephone\",\n        company_website: \"www.webste.com\",\n        social_media: \"social media links\",\n        company_address: \"address\",\n        usergroup: usergroup,\n        uid: uid,\n        date: new Date()\n      })\n    ]);\n  }\n\n\n  checkExistance(uid) {\n\n\n\n    this.db.collectionGroup(\"profile\")\n      .where(\"uid\", \"==\", (uid))\n      // .where(\"publishedAt\", \"<=\", new Date(\"2018-12-31 23:59\"))\n      .get()\n      .then(snap => {\n        snap.forEach(doc => {\n          if (!doc.exists) {\n            console.log(\"No such user in the profiles Document!\");\n          } \n          if(doc.exists){\n        \n            // if (doc.data().usergroup == 'user') {\n          \n            //   this.status = true;            \n            //  // console.log(\"Document data:\", doc.data());\n            //  console.log(\"user welcome\");\n            //   // this.router.navigateByUrl('profile');\n            // } else\n              if (doc.data().usergroup == 'owner') {\n                console.log(\"Owner\")\n                this.status = true;\n                console.log(\"Document data:\", doc.data());\n             this.router.navigateByUrl('owner-landing');\n              }\n        \n          }\n     \n        });\n        // if (this.status != true){\n        //   // console.log(this.status)\n        //   console.log(\"Create profile please\")\n        //   this.router.navigateByUrl('/user-group');\n        // }\n      });\n      \n      \n      \n  }\n  setStatus(x) {\n    this.status = x;\n  }\n  returnStatus() {\n    return this.status\n  }\n}\n"]}