(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["pages-update-space-update-space-module"],{

/***/ "./node_modules/raw-loader/dist/cjs.js!./src/app/pages/update-space/update-space.page.html":
/*!*************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/pages/update-space/update-space.page.html ***!
  \*************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"/\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>update-space</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n\n  <ion-refresher slot =\"fixed\" disabled=\"false\" (ionRefresh)=\"doRefresh($event)\" pullFactor=\"0.5\" pullMin=\"100\" pullMax=\"200\">  \n    <ion-refresher-content  \n    pullingIcon=\"arrow-down\"  \n    pullingText=\"Pull to refresh\"  \n    refreshingSpinner=\"bubbles\"  \n    refreshingText=\"Refreshing.....\"></ion-refresher-content>   \n  </ion-refresher>  \n \n\n  <ion-grid>\n    <ion-row>\n  <ion-item  *ngFor=\"let x of arrayList\">\n    <ion-avatar slot=\"start\">\n      <img [src]=\"x.image\">\n    </ion-avatar>\n    <ion-label>\n     <ion-grid>\n       <ion-row>\n        {{x.categories}}\n       </ion-row>\n       <ion-row>\n        {{x.price}}\n       </ion-row>\n       <ion-row>\n        {{x.address}}\n       </ion-row>\n       <ion-row>\n        {{x.description}}\n       </ion-row>\n       <ion-row>\n         <ion-col *ngFor=\"let y of x.amenities\">\n          {{y}} \n         </ion-col>\n       </ion-row>\n       <ion-row>\n\n       \n         <a [routerLink] = \"['/previews',x.uid,x.workspace_uid,x.spaceuid]\">Previews</a>\n       </ion-row>\n       <ion-row>\n         <ion-col>\n          <ion-button (click)=\"EditForm(x.spaceuid)\"> Edit</ion-button>\n         </ion-col>\n         <ion-col ><ion-button (click)=\" addGallary(x.spaceuid)\"    color=\"warning\">Gallary</ion-button></ion-col>\n         <ion-col>\n          <ion-button color=\"danger\" (click)=\"remove(x.spaceuid)\" > Remove</ion-button>\n         </ion-col>\n         <ion-col >\n          <ion-button  [routerLink] = \"['/walkins',x.spaceuid,x.categories,x.workspace_uid]\"> Walkins</ion-button>\n         </ion-col>\n       </ion-row>\n       <ion-row>\n        <ion-button  [routerLink] = \"['/view-walkins',x.spaceuid,x.categories,x.workspace_uid]\">view Walkins</ion-button>\n       </ion-row>\n     </ion-grid>\n    </ion-label>\n  </ion-item>\n</ion-row>\n<ion-row>\n\n  <div *ngIf=\"GallaryStatusValue==1\">\n\n    <ion-item>\n  \n      <ion-input type=\"file\"  required   name=\"img\"  accept=\"image/*\" id=\"upload\" (change)=\"fileChangeEvent($event)\"></ion-input>\n      <button (click)=\"uploadGallary()\" *ngIf=\"this.gallaryArraySize < 4\"> add image</button>\n   \n      <div>\n        <div  style=\"color:red;\" *ngIf=\" this.imageError!==''\">{{this.imageError}}</div>\n      \n      </div>\n    </ion-item>\n    <ion-grid>\n      <ion-row>\n       <b>Total images upload: {{this.gallaryArraySize+1 }}</b> \n\n      </ion-row>\n      <ion-row *ngIf=\"this.gallaryArraySize >= 4\">\n        <span >Click image to delete</span>\n      </ion-row>\n      <ion-row>\n        <ion-fab  horizontal=\"end\"  >\n          <ion-fab-button    (click)=\"imageInArray()\" color=\"warning\">\n            <ion-icon name=\"add\"></ion-icon>\n          </ion-fab-button>\n        </ion-fab>\n      </ion-row>\n      <ion-row (click)=\"freshers()\" >\n        <ion-col *ngFor=\"let k of gallaryArray\"> \n          <div *ngFor=\"let b of k.image\">\n{{b.img}}\n          </div>       \n         <img (click)=\"deleteImage(k.spaceuid,k.gallaryuid)\" [src]=\"k.img\">\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n\n\n  </div>\n</ion-row>\n      <ion-row>\n        \n  <div *ngIf=\"showFormvalue==1\">\n\n        <form #editSpaceForm=\"ngForm\" type=\"text\" style=\"width: 100%;top: 15%;height: 80%;\">\n       \n              <ion-label><b>Description</b> </ion-label>\n             <ion-input\n                type=\"text\"    \n                [(ngModel)]=\"description_\" \n                name=\"description\" \n                required\n                maxlength=\"100\"\n                #description=\"ngModel\" \n                placeholder=\"Company name..\">\n              </ion-input>\n              <div style=\"color:red;\" *ngIf=\"!description?.valid && (description?.dirty || description?.touched)\">\n                Invalid description\n                <div *ngIf=\"description.errors.required\">\n                  description is required\n               </div>\n               <div *ngIf=\"description.errors.maxlength\">\n                maxlength is 100\n             </div>\n             </div>\n             <ion-label><b>Price</b> </ion-label>\n            <ion-input  \n                type=\"number\"  \n                placeholder=\"price...\"\n                [(ngModel)]=\"price_\" \n              \n                name=\"price_\">\n            </ion-input>\n      \n            <ion-label><b>Province</b> </ion-label>\n           <ion-input  \n            type=\"text\"  \n            placeholder=\"province ...\"\n            [(ngModel)]=\"province_\" \n            required\n            maxlength=\"100\"\n            #province=\"ngModel\" \n            name=\"province\">\n         </ion-input>\n         <div style=\"color:red;\" *ngIf=\"!province?.valid && (province?.dirty || province?.touched)\">\n          Invalid province\n          <div *ngIf=\"province.errors.required\">\n            province is required\n         </div>\n         <div *ngIf=\"province.errors.maxlength\">\n          maxlength is 100\n       </div>\n       </div>\n\n       \n        \n       <ion-label><b>Address</b> </ion-label>\n             <ion-textarea  \n             type=\"text\"  \n             [(ngModel)]=\"address_\" \n             name=\"address\" \n             required\n             maxlength=\"100\"\n             #address=\"ngModel\" \n             style=\"border-style: solid;height: 15%;border-width: 1px;border-color: rgb(196, 190, 190);border-top: 0px;margin: 0px;\">\n            </ion-textarea>\n            <div style=\"color:red;\" *ngIf=\"!address?.valid && (address?.dirty || address?.touched)\">\n              Invalid address\n              <div *ngIf=\"address.errors.required\">\n                address is required\n             </div>\n             <div *ngIf=\"address.errors.maxlength\">\n              maxlength is 100\n           </div>\n           </div>\n      \n              <ion-label><b>Category Number</b> </ion-label>\n              <ion-select  [(ngModel)]=\"category_number_\"   required     #category_number=\"ngModel\"  name=\"category_number\">\n                  <ion-select-option value=\"1\">1</ion-select-option>\n                  <ion-select-option value=\"2\">2</ion-select-option>\n                  <ion-select-option value=\"3\">3</ion-select-option>\n                  <ion-select-option value=\"4\">4</ion-select-option>\n              </ion-select>\n              <div style=\"color:red;\" *ngIf=\"!category_number?.valid && (category_number?.dirty || category_number?.touched)\">\n                Invalid category_number\n                <div *ngIf=\"address.errors.required\">\n                  category_number is required\n               </div>\n            </div>\n\n\n\n\n        \n  \n         \n           \n             <!-- <button (click)=\"addExtrasToarray()\">(+)</button> -->\n\n             \n\n             \n              <!-- </ion-item> -->\n\n\n  <ion-item>\n    <ion-grid>\n      <ion-row>\n       <ion-item><p style=\"font-size:14px; font-weight: bolder;color: gray;\">update enemities</p></ion-item>\n      </ion-row>\n       <ion-row style=\"color: grey;margin: 5px;\">\n         <ion-col *ngFor=\"let cartoon of cartoonsData\">\n           <div style=\"font-size: 12px;\">{{ cartoon.name }} <br>  <input type=\"checkbox\"    (change)=\"onChange(cartoon.name, $event.target.checked)\" />\n           </div>\n         </ion-col>\n       </ion-row>\n     </ion-grid>\n   </ion-item>\n\n\n  \n  <ion-item>\n    <ion-button (click)=\" updateSpace()\" [disabled]=\"!editSpaceForm.valid\"   expand=\"full\" color=\"danger\">Edit</ion-button>\n    <ion-button (click)=\" close()\"   expand=\"full\" color=\"warning\">Close</ion-button>\n \n  </ion-item>\n  <div>\n    <form #setMapForm=\"ngForm\" >\n    <h3>Add address of workspace to google maps</h3>\n    <ion-item>\n      <ion-label position=\"stacked\">Enter Address to Geocode</ion-label>\n      <ion-input \n                  type=\"text\" \n                  [(ngModel)]=\"addressLocation\" \n                  name=\"addressLocation\"\n                  required\n                  minlength=\"2\"\n                  pattern=\"^[_A-z0-9]*((-|\\s)*[_A-z0-9])*$\"\n                 \n                  #addressLocationErr=\"ngModel\" \n                  ></ion-input>\n                  <div style=\"color:red;\" *ngIf=\"!addressLocationErr?.valid && (addressLocationErr?.dirty || addressLocationErr?.touched)\">\n                    Invalid First Name\n                    <div *ngIf=\"addressLocationErr.errors.required\">\n                      First Name is required\n                   </div>\n                   <div *ngIf=\"addressLocationErr.errors.minlength\">\n                     First Name Minimum Length is {{addressLocationErr.errors.minlength?.requiredLength}}\n                   </div>\n                 </div>\n    </ion-item>\n    <ion-row  *ngIf=\"!showingCurrent\">\n      <ion-text class=\"coords\">My Latitude : {{lat}}</ion-text>\n    </ion-row>\n    <ion-row  *ngIf=\"!showingCurrent\">\n      <ion-text class=\"coords\">My Longitude : {{lng}}</ion-text>\n    </ion-row>\n    <ion-button color=\"success\" [disabled]=\"!setMapForm.valid\" (click)=\"geocode()\" expand=\"full\" class=\"ion-margin\">\n      Add to Google Maps</ion-button>  \n    </form>\n  </div>\n       \n\n \n  \n\n      </form>\n  <!-- <ion-item> -->\n    <div> \n      <form #extrasForm=\"ngForm\">    \n      <h3>Add extras</h3>\n      <ion-grid>\n        <ion-row>\n          <ion-col>\n            <ion-input  \n            type=\"text\"  \n            placeholder=\"enemity...\"\n            [(ngModel)]=\"enemity\" \n            name=\"enemity\"\n            maxlength=\"8\"\n            required\n            minlength=\"2\"\n            pattern=\"^[a-zA-Z]+$\"\n            #enemityErr=\"ngModel\" \n            >\n         </ion-input>\n         <div style=\"color:red;\" *ngIf=\"!enemityErr?.valid && (enemityErr?.dirty || enemityErr?.touched)\">\n          Invalid First item\n          <div *ngIf=\"enemityErr.errors.required\">\n            item is required\n         </div>\n         <div *ngIf=\"enemityErr.errors.minlength\">\n           First Name Minimum Length is {{enemityErr.errors.minlength?.requiredLength}}\n         </div>\n         <div *ngIf=\"enemityErr.errors.maxlength\">\n          First Name Maximum Length is {{enemityErr.errors.maxlength?.requiredLength}}\n        </div>\n       </div>\n          </ion-col>\n          <ion-col>\n            <ion-input  \n            type=\"number\"  \n            placeholder=\"Price...\"\n            [(ngModel)]=\"price\" \n            name=\"price\"\n            required\n            maxlength=\"3\"\n            minlength=\"2\"\n            pattern=\"^[0-9]+$\"\n            #priceErr=\"ngModel\" \n            >\n         </ion-input>\n         <div style=\"color:red;\" *ngIf=\"!priceErr?.valid && (priceErr?.dirty || priceErr?.touched)\">\n          Invalid Price\n          <div *ngIf=\"priceErr.errors.required\">\n            Price is required\n         </div>\n         <div *ngIf=\"priceErr.errors.minlength\">\n          Price Minimum Length is {{priceErr.errors.minlength?.requiredLength}}\n         </div>\n         <div *ngIf=\"priceErr.errors.maxlength\">\n          Price Maximum Length is {{priceErr.errors.maxlength?.requiredLength}}\n        </div>\n       </div>\n          </ion-col>\n       \n          <ion-col>\n            {{this.messageValue}}\n          </ion-col>\n \n          <ion-col>\n            <div>Items:{{this.extrasCart}}</div>\n            <ion-fab  horizontal=\"end\"  >\n              <ion-fab-button *ngIf=\"this.extrasCart<5\"  [disabled]=\"!extrasForm.valid\" (click)=\"addExtrasToarray()\" color=\"danger\">\n                <ion-icon name=\"add\"></ion-icon>\n              </ion-fab-button>\n            </ion-fab>\n          </ion-col>\n        </ion-row>\n        <ion-row>\n        \n          <ion-button *ngIf=\"this.extrasCart>0\"  [disabled]=\"!extrasForm.valid\" expand=\"full\" color=\"secondary\" (click)=\"addExtras()\"> Add</ion-button>\n        </ion-row>\n      </ion-grid>\n</form>\n</div> \n<div>\n<form #changeImageForm=\"ngForm\">\n        <h3>Change profile</h3>\n        <div>\n          <ion-input type=\"file\"  required   name=\"img\"  accept=\"image/*\" id=\"upload\" (change)=\"fileChangeEvent($event)\"></ion-input>\n        \n          <div style=\"color:red;\" *ngIf=\"!priceErr?.valid && (priceErr?.dirty || priceErr?.touched)\">\n            Invalid Price\n            <div *ngIf=\"priceErr.errors.required\">\n              Price is required\n           </div>\n         </div>\n         <ion-button [disabled]=\"!changeImageForm.valid\" *ngIf=\" this.isImageSaved\" expand=\"full\" color=\"success\"  (click)=\"changeImage()\"> Change Profile</ion-button>\n          <div>\n            <div style=\"color:red;\" *ngIf=\" this.imageError!==''\">{{this.imageError}}</div>\n          </div>\n          \n        </div>\n  \n      </form>\n</div>\n      </div>\n      </ion-row>\n    </ion-grid>\n   \n    \n</ion-content>\n");

/***/ }),

/***/ "./src/app/pages/update-space/update-space-routing.module.ts":
/*!*******************************************************************!*\
  !*** ./src/app/pages/update-space/update-space-routing.module.ts ***!
  \*******************************************************************/
/*! exports provided: UpdateSpacePageRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateSpacePageRoutingModule", function() { return UpdateSpacePageRoutingModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var _update_space_page__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./update-space.page */ "./src/app/pages/update-space/update-space.page.ts");




const routes = [
    {
        path: '',
        component: _update_space_page__WEBPACK_IMPORTED_MODULE_3__["UpdateSpacePage"]
    }
];
let UpdateSpacePageRoutingModule = class UpdateSpacePageRoutingModule {
};
UpdateSpacePageRoutingModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forChild(routes)],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]],
    })
], UpdateSpacePageRoutingModule);



/***/ }),

/***/ "./src/app/pages/update-space/update-space.module.ts":
/*!***********************************************************!*\
  !*** ./src/app/pages/update-space/update-space.module.ts ***!
  \***********************************************************/
/*! exports provided: UpdateSpacePageModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateSpacePageModule", function() { return UpdateSpacePageModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/__ivy_ngcc__/fesm2015/forms.js");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ionic/angular */ "./node_modules/@ionic/angular/__ivy_ngcc__/fesm2015/ionic-angular.js");
/* harmony import */ var _update_space_routing_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./update-space-routing.module */ "./src/app/pages/update-space/update-space-routing.module.ts");
/* harmony import */ var _update_space_page__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./update-space.page */ "./src/app/pages/update-space/update-space.page.ts");







let UpdateSpacePageModule = class UpdateSpacePageModule {
};
UpdateSpacePageModule = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [
            _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"],
            _ionic_angular__WEBPACK_IMPORTED_MODULE_4__["IonicModule"],
            _update_space_routing_module__WEBPACK_IMPORTED_MODULE_5__["UpdateSpacePageRoutingModule"]
        ],
        declarations: [_update_space_page__WEBPACK_IMPORTED_MODULE_6__["UpdateSpacePage"]]
    })
], UpdateSpacePageModule);



/***/ }),

/***/ "./src/app/pages/update-space/update-space.page.scss":
/*!***********************************************************!*\
  !*** ./src/app/pages/update-space/update-space.page.scss ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VwZGF0ZS1zcGFjZS91cGRhdGUtc3BhY2UucGFnZS5zY3NzIn0= */");

/***/ }),

/***/ "./src/app/pages/update-space/update-space.page.ts":
/*!*********************************************************!*\
  !*** ./src/app/pages/update-space/update-space.page.ts ***!
  \*********************************************************/
/*! exports provided: UpdateSpacePage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UpdateSpacePage", function() { return UpdateSpacePage; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
/* harmony import */ var src_app_sign_in_sign_up_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/sign-in-sign-up.service */ "./src/app/sign-in-sign-up.service.ts");
/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/app */ "./node_modules/firebase/app/dist/index.esm.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/__ivy_ngcc__/fesm2015/router.js");
/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! firebase/firestore */ "./node_modules/firebase/firestore/dist/index.esm.js");
/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! firebase/auth */ "./node_modules/firebase/auth/dist/index.esm.js");
/* harmony import */ var src_app_services_owner_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/services/owner.service */ "./src/app/services/owner.service.ts");
/* harmony import */ var _ionic_angular__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ionic/angular */ "./node_modules/@ionic/angular/__ivy_ngcc__/fesm2015/ionic-angular.js");
/* harmony import */ var src_app_feedback_masseges_masseges_page__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/feedback/masseges/masseges.page */ "./src/app/feedback/masseges/masseges.page.ts");
/* harmony import */ var _capacitor_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @capacitor/core */ "./node_modules/@capacitor/core/dist/esm/index.js");
/* harmony import */ var _ionic_native_native_geocoder_ngx__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ionic-native/native-geocoder/ngx */ "./node_modules/@ionic-native/native-geocoder/__ivy_ngcc__/ngx/index.js");










//////////////Geolocation and Geocode//////////

const { Geolocation, Toast } = _capacitor_core__WEBPACK_IMPORTED_MODULE_10__["Plugins"];

let UpdateSpacePage = class UpdateSpacePage {
    constructor(loader, nativeGeocoder, ngZone, popover, route, ownerservice, account) {
        this.loader = loader;
        this.nativeGeocoder = nativeGeocoder;
        this.ngZone = ngZone;
        this.popover = popover;
        this.route = route;
        this.ownerservice = ownerservice;
        this.account = account;
        this.extras = {};
        this.extrasArray = [];
        this.arrayList = [];
        this.arrayEdit = [];
        this.category = this.route.snapshot.params.category;
        this.amenities_ = [];
        this.amenitiesEdit = [];
        this.cartoonsData = [
            { id: 0, name: 'lights' },
            { id: 1, name: 'guachairsrds' },
            { id: 2, name: 'aircon' },
            { id: 3, name: 'plugs' },
            { id: 4, name: 'kitchen' },
            { id: 5, name: 'sunlight' },
            { id: 6, name: 'toilet' },
            { id: 7, name: 'clean' },
            { id: 8, name: 'safety' },
            { id: 9, name: 'tv' },
            { id: 10, name: 'wifi' },
            { id: 11, name: 'microphone' },
            { id: 12, name: 'speakers' },
            { id: 13, name: 'phone' },
            { id: 14, name: 'desktop' },
            { id: 15, name: 'bin' }
        ];
        this.GallaryStatusValue = 0;
        this.gallaryArray = [];
        this.gallaryArraySize = -1;
        this.extrasCart = 0;
        this.showingCurrent = true;
        this.imageList = [];
        ////Refreshers
        this.dummyList = [];
        //this.checkGallary();
        firebase_app__WEBPACK_IMPORTED_MODULE_3__["default"].firestore().collection("profiles")
            .doc(this.account.getUserSession())
            .collection("profile").doc(this.ownerservice.getWorkSpaceUID()).collection("space")
            .where("uid", "==", this.account.getUserSession()).where("categories", "==", this.category)
            .get()
            .then(doc => {
            doc.forEach(dat => {
                this.arrayList.push(Object.assign(dat.data(), { "spaceuid": dat.id }));
                this.workspaceuid = dat.id;
            });
            this.checkGallary(this.workspaceuid);
            console.log(this.arrayList);
        });
    }
    onChange(name, isChecked) {
        this.amenitiesEdit.push((name));
        console.log(this.amenitiesEdit);
    }
    fileChangeEvent(fileInput) {
        this.imageError = null;
        if (fileInput.target.files && fileInput.target.files[0]) {
            const max_size = 20971520;
            const allowed_types = ['image/png', 'image/jpeg'];
            const max_height = 15200;
            const max_width = 25600;
            if (fileInput.target.files[0].size > max_size) {
                this.imageError = 'Maximum size allowed is ' + max_size / 1000 + 'Mb';
                return false;
            }
            if (!allowed_types.includes(fileInput.target.files[0].type)) {
                this.imageError = 'Only Images are allowed ( JPG | PNG )';
                return false;
            }
            const reader = new FileReader();
            reader.onload = (e) => {
                const image = new Image();
                image.src = e.target.result;
                image.onload = rs => {
                    const img_height = rs.currentTarget['height'];
                    const img_width = rs.currentTarget['width'];
                    console.log(img_height, img_width);
                    if (img_height > max_height && img_width > max_width) {
                        this.imageError =
                            'Maximum dimentions allowed ' +
                                max_height +
                                '*' +
                                max_width +
                                'px';
                        return false;
                    }
                    else {
                        const imgBase64Path = e.target.result;
                        this.cardImageBase64 = imgBase64Path;
                        this.isImageSaved = true;
                        return this.cardImageBase64;
                    }
                };
            };
            reader.readAsDataURL(fileInput.target.files[0]);
        }
    }
    ngOnInit() {
    }
    EditForm(id) {
        this.showFormvalue = 1;
        this.GallaryStatusValue = 0;
        this.spaceUid = id;
        console.log(this.spaceUid);
        console.log(this.category);
        firebase_app__WEBPACK_IMPORTED_MODULE_3__["default"].firestore().collection("profiles")
            .doc(this.account.getUserSession())
            .collection("profile").doc(this.ownerservice.getWorkSpaceUID()).collection("space").doc(this.spaceUid)
            .get()
            .then(doc => {
            this.description_ = doc.data().description;
            this.address_ = doc.data().address;
            this.category_number_ = doc.data().category_number;
            this.price_ = doc.data().price;
            this.province_ = doc.data().province;
            this.amenities_ = (doc.data().amenities);
            this.categories_ = doc.data().categories;
            this.city_ = doc.data().city;
            this.spaceid = doc.id;
            console.log(this.amenities_);
        });
    }
    updateSpace() {
        // console.log( this.description_+"/"+this.address_+"/"+this.category_number_+"/"+this.price_+"/"+this.province_+"/"+this.amenitiesEdit )
        this.ownerservice.updateCoworkingSpace(this.account.getUserSession(), this.ownerservice.getWorkSpaceUID(), this.spaceUid, this.categories_, this.category_number_, this.address_, this.price_, this.city_, this.province_, this.amenitiesEdit, this.description_);
        this.CreatePopover();
    }
    close() {
        this.showFormvalue = 0;
    }
    remove(id) {
        this.ownerservice.deleteSpace(this.account.getUserSession(), this.ownerservice.getWorkSpaceUID(), id);
        this.CreatePopover();
    }
    changeImage() {
        this.ownerservice.changeImgSpace(this.account.getUserSession(), this.ownerservice.getWorkSpaceUID(), this.cardImageBase64, this.spaceUid);
        this.CreatePopover();
    }
    addExtrasToarray() {
        var extrasx = {
            anemenity: this.enemity,
            price: this.price
        };
        this.extrasArray.push(extrasx);
        this.extrasCart = this.extrasArray.length;
        console.log(this.extrasArray);
    }
    addExtras() {
        this.ownerservice.extrasAmenities(this.account.getUserSession(), this.ownerservice.getWorkSpaceUID(), this.extrasArray, this.spaceUid);
    }
    addGallary(x) {
        this.showFormvalue = 0;
        this.GallaryStatusValue = 1;
        this.workspaceuid = x;
    }
    getSpaceUid() {
        return this.workspaceuid;
    }
    uploadGallary() {
        console.log(this.workspaceuid);
        this.ownerservice.addGallary(this.account.getUserSession(), this.ownerservice.getWorkSpaceUID(), this.workspaceuid, this.imageList, this.gallaryuid);
        // this.imageArrayList(this.cardImageBase64)
        //  this.freshers(); gallaryArray
    }
    imageInArray() {
        var gallary = {
            img: this.cardImageBase64
        };
        this.imageList.push(gallary);
        //this.extrasCart=this.extrasArray.length
        console.log(this.imageList);
    }
    checkGallary(valueuid) {
        console.log(this.ownerservice.getWorkSpaceUID());
        console.log(this.account.getUserSession());
        console.log(valueuid);
        var db = firebase_app__WEBPACK_IMPORTED_MODULE_3__["default"].firestore();
        var hotelsRef = db.collection("profiles").doc(this.account.getUserSession());
        hotelsRef.collection("profile").doc(this.ownerservice.getWorkSpaceUID())
            .collection("space").doc(valueuid)
            .collection("gallary").where("uid", "==", this.account.getUserSession())
            .get().then(doc => {
            doc.forEach(dat => {
                this.gallaryArray.push(Object.assign(dat.data(), { 'gallaryuid': dat.id }));
                this.gallaryuid = dat.id;
                this.gallaryArraySize = this.gallaryArray.length - 1;
            });
        });
    }
    deleteImage(spaceuid, gallaryuid) {
        var db = firebase_app__WEBPACK_IMPORTED_MODULE_3__["default"].firestore();
        var hotelsRef = db.collection("profiles").doc(this.account.getUserSession());
        hotelsRef.collection("profile").doc(this.ownerservice.getWorkSpaceUID())
            .collection("space").doc(spaceuid)
            .collection("gallary").doc(gallaryuid).delete().then((res) => {
            console.log("deleted");
        });
    }
    CreatePopover() {
        this.popover.create({ component: src_app_feedback_masseges_masseges_page__WEBPACK_IMPORTED_MODULE_9__["MassegesPage"],
            showBackdrop: false }).then((popoverElement) => {
            popoverElement.present();
        });
    }
    //////////////Geolocation and Geocode//////////
    geocode() {
        return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, function* () {
            this.ownerservice.geoCodeLocation(this.account.getUserSession(), this.ownerservice.getWorkSpaceUID(), this.spaceUid, -26.269212999999997, 27.790485);
            if (this.addressLocation != "") {
                let options = {
                    useLocale: true,
                    maxResults: 5
                };
                this.nativeGeocoder.forwardGeocode(this.addressLocation, options)
                    .then((result) => {
                    this.ngZone.run(() => {
                        this.lat = parseFloat(result[0].latitude);
                        this.lng = parseFloat(result[0].longitude);
                        this.ownerservice.geoCodeLocation(this.account.getUserSession(), this.ownerservice.getWorkSpaceUID(), this.spaceUid, this.lat, this.lng);
                        //  geoCodeLocation(user_uid, profile_uid,cate_uid,lat,log)
                        // this.myMap.triggerResize()
                        //   .then(() => (this.myMap as any)._mapsWrapper.setCenter({ lat: this.lat, lng: this.lng }));
                    });
                    this.showingCurrent = false;
                })
                    .catch((error) => console.log(error));
            }
            else {
                yield Toast.show({
                    text: 'Please add address to Geocode'
                });
            }
        });
    }
    doRefresh(event) {
        console.log('Pull Event Triggered!');
        setTimeout(() => {
            this.dummyList = Array(5);
            event.target.complete();
        }, 1500);
    }
    doRefreshT(event) {
        console.log('Pull Event Triggered!');
    }
    freshers() {
        this.loader.create({
            message: 'This Loader Will Auto Hide in 2 Seconds',
            duration: 2000
        }).then((res) => {
            res.present();
            res.onDidDismiss().then((dis) => {
                console.log('Loading dismissed! after 2 Seconds', dis);
            });
        });
    }
};
UpdateSpacePage.ctorParameters = () => [
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_8__["LoadingController"] },
    { type: _ionic_native_native_geocoder_ngx__WEBPACK_IMPORTED_MODULE_11__["NativeGeocoder"] },
    { type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"] },
    { type: _ionic_angular__WEBPACK_IMPORTED_MODULE_8__["PopoverController"] },
    { type: _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"] },
    { type: src_app_services_owner_service__WEBPACK_IMPORTED_MODULE_7__["OwnerServiceService"] },
    { type: src_app_sign_in_sign_up_service__WEBPACK_IMPORTED_MODULE_2__["SignInSignUpService"] }
];
UpdateSpacePage = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-update-space',
        template: Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! raw-loader!./update-space.page.html */ "./node_modules/raw-loader/dist/cjs.js!./src/app/pages/update-space/update-space.page.html")).default,
        styles: [Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__importDefault"])(__webpack_require__(/*! ./update-space.page.scss */ "./src/app/pages/update-space/update-space.page.scss")).default]
    })
], UpdateSpacePage);



/***/ })

}]);
//# sourceMappingURL=pages-update-space-update-space-module-es2015.js.map